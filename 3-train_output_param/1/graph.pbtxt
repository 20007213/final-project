node {
  name: "loader/normalize_element/component_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1577
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1577
          }
        }
        string_val: "/content/drive/MyDrive/heartbeat artifact/00126.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00244.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00158.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00167.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00116.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00239.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00141.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00286.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00213.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00131.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00189.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00134.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00151.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00284.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00176.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00291.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00188.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00275.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00153.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00293.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00226.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00273.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00112.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00115.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00173.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00118.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00154.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00108.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00105.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00251.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00281.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00186.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00210.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00296.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00195.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00114.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00132.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00221.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00192.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00163.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00136.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00127.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00262.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00180.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00109.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00214.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00183.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00168.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00269.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00165.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00227.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00245.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00224.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00169.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00121.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00149.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00199.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00230.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00207.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00237.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0098.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00175.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00231.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00211.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00157.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00300.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00255.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00177.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00156.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00128.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00140.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00145.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00298.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00201.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00152.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0097.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00257.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00143.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00196.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00206.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00181.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00138.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00246.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00272.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00182.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00122.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00241.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00187.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00265.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00301.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00110.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00203.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00100.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00166.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00135.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00172.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00260.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00280.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00243.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00270.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00162.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00236.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00229.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00160.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00178.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00266.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00220.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00217.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00119.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00256.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00198.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00278.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00113.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00155.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00299.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00174.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00179.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00124.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00212.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00287.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00261.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00282.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00164.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00148.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00142.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00161.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0099.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00144.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00101.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00279.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00218.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00268.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00219.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00191.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00202.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00139.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00223.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00240.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00235.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00247.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00470.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00468.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00368.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00475.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00473.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00471.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00472.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00378.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00474.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00369.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00469.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00536.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00491.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00482.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00512.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00481.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00515.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00520.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00516.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00532.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00524.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00502.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00533.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00539.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00484.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00487.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00528.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00494.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00486.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00490.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00379.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00541.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00476.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00477.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00522.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00493.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00525.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00507.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00489.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00383.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00529.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00534.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00483.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00544.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00518.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00478.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00527.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00530.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00496.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00384.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00380.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00479.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00519.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00499.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00514.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00480.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00500.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00543.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00535.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00526.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00513.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00505.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00538.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00545.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00509.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00511.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00385.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00506.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00531.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00495.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00485.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00510.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00542.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00488.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00517.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00503.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00504.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00508.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00382.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00492.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00381.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00540.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00537.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00523.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00521.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00497.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00498.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00501.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00370.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00636.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00621.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00598.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00577.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00586.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00555.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00606.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00395.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00590.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00554.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00637.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00575.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00608.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00389.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00550.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00634.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00547.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00394.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00580.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00631.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00558.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00582.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00570.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00583.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00603.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00581.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00559.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00623.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00390.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00615.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00392.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00551.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00605.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00610.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00387.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00549.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00391.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00633.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00572.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00620.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00560.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00564.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00388.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00632.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00594.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00576.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00561.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00614.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00588.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00596.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00568.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00591.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00629.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00630.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00573.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00624.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00584.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00571.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00628.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00565.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00552.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00627.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00574.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00626.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00595.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00592.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00601.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00556.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00393.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00600.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00617.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00546.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00548.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00609.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00589.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00566.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00602.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00579.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00613.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00618.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00585.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00599.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00616.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00593.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00604.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00612.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00619.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00553.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00569.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00567.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00587.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00597.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00622.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00562.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00557.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00607.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00563.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00386.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00578.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00625.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00635.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00611.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00668.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00728.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00640.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00726.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00677.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00647.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00658.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00403.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00708.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00664.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00642.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00690.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00641.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00655.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00667.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00721.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00399.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00732.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00645.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00675.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00683.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00689.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00722.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00698.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00692.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00396.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00730.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00643.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00711.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00673.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00691.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00699.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00397.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00666.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00703.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00709.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00710.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00648.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00725.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00696.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00684.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00716.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00660.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00400.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00704.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00678.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00680.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00723.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00693.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00657.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00663.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00672.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00685.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00719.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00670.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00705.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00718.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00731.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00671.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00652.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00404.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00695.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00720.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00700.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00644.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00681.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00712.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00401.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00653.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00715.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00687.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00706.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00697.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00714.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00729.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00649.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00402.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00724.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00713.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00701.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00662.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00638.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00679.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00371.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00686.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00688.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00694.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00682.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00674.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00654.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00639.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00659.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00702.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00656.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00665.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00676.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00717.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00661.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00707.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00650.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00727.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00646.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00669.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00398.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00651.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00405.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00786.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00805.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00797.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00747.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00759.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00753.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00762.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00782.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00806.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00823.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00758.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00768.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00745.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00808.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00771.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00760.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00770.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00784.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00409.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00778.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00776.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00757.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00411.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00733.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00780.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00748.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00774.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00817.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00820.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00788.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00783.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00819.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00785.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00372.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00739.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00798.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00743.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00752.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00804.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00742.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00810.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00772.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00755.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00761.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00775.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00792.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00767.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00764.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00807.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00777.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00407.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00735.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00824.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00809.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00766.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00734.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00756.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00746.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00406.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00749.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00787.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00769.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00818.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00413.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00793.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00815.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00790.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00773.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00811.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00791.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00408.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00750.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00740.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00794.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00751.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00795.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00737.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00754.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00800.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00812.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00827.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00799.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00736.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00822.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00816.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00738.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00789.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00779.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00813.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00821.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00803.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00765.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00802.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00825.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00744.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00814.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00796.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00763.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00801.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00410.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00781.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00741.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00412.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00826.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00427.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00861.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00450.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00376.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00435.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00463.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00880.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00433.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00467.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00415.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00419.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00426.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00456.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00844.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00828.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00454.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00375.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00862.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00860.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00423.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00437.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00464.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00850.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00831.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00854.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00455.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00453.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00869.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00429.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00868.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00832.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00434.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00432.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00461.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00842.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00430.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00443.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00855.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00837.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00377.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00462.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00870.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00438.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00847.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00859.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00440.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00421.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00414.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00449.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00838.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00853.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00867.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00841.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00846.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00858.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00458.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00852.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00424.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00451.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00865.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00871.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00436.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00836.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00863.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00830.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00418.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00833.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00452.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00373.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00446.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00840.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00416.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00445.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00839.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00851.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00444.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00447.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00431.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00374.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00829.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00448.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00459.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00834.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00428.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00439.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00835.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00856.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00465.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00866.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00441.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00460.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00848.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00849.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00422.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00864.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00857.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00425.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00442.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00417.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00457.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00466.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00845.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00420.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00843.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00990.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001043.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00982.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001012.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001016.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001054.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001068.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00889.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001055.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001066.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001062.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001021.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001007.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001014.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001004.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001039.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001009.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001052.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001013.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001038.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001017.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001061.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001003.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001041.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001008.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001050.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00971.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001006.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001018.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00980.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001026.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00994.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001067.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001011.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001015.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00883.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001047.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001010.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001035.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00881.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001033.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00997.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00888.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00973.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001045.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00987.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001032.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001031.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00993.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001001.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00992.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001063.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00978.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001040.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00998.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00988.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00979.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00970.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00882.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00995.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001036.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001057.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001022.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001064.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001023.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00885.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001028.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00991.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00986.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001042.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001025.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00996.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001049.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001002.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001053.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001000.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00974.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001059.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001020.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001034.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001048.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001029.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00981.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00976.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001019.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001056.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001037.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00887.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00985.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001069.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001005.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001024.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00983.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00972.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001058.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00984.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00886.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00999.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00884.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001060.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00977.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001030.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001065.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00989.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00975.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001027.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001044.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001051.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001046.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001100.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001072.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001077.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001090.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001145.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001162.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001158.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001112.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001110.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001156.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001127.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001099.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001116.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001129.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001147.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001094.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001085.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001152.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001075.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001118.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001124.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001141.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001125.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001082.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001135.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00893.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001115.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001130.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00897.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001160.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001137.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00895.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001105.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001078.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001117.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001165.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001095.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001159.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00872.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00892.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001150.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001161.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001134.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001098.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001144.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001133.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001103.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001091.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00896.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001108.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001089.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001104.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001080.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001076.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00890.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001121.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001163.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001126.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001167.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001097.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001143.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001153.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001131.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001083.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001086.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001140.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001070.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001138.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001123.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001114.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001073.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00898.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001109.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001107.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001151.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00891.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00899.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001084.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001154.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001111.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001166.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001164.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001142.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001146.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001079.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001096.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001119.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001132.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001101.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001102.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001122.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001071.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001106.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00894.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001149.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001120.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001136.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001148.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001093.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001113.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001155.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001092.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001139.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001088.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001087.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001081.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001074.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001157.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001128.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00900.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00938.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00939.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001208.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00943.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001202.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00875.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00944.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001182.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00912.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00934.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001206.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00874.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00904.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001216.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001212.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00940.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00902.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001183.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00941.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001219.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00930.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00908.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00921.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00932.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001226.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001224.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001179.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001186.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00945.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00931.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00877.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00933.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001209.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00929.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00942.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00920.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00901.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00907.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00903.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00914.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001221.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001204.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00927.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001180.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001201.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001192.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001203.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00876.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00910.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001176.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001215.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00913.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001175.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00905.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001187.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001210.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00915.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001170.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001217.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001213.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001173.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001190.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001184.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001205.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001172.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00918.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001225.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001223.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001171.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001199.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00917.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001169.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001200.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001181.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001185.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00924.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001207.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001178.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001177.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001193.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00935.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00909.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001188.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00916.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001189.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001194.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00906.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001174.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001218.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00928.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001214.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00936.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001197.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001196.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00922.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00873.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001222.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00926.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001195.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001211.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00925.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001168.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001220.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001191.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00919.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001198.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00937.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00923.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00911.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00956.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00961.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00962.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00947.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00969.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00964.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00879.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00968.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00963.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00878.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00957.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00960.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00966.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00954.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00965.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00959.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00948.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00946.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00952.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00953.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00949.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00950.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00958.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00951.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00967.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00955.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/002.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/003.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/004.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/005.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/006.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/008.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/007.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/009.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0010.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0011.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0012.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0013.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0014.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0015.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0019.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0026.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0028.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0021.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0017.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0022.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0016.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0030.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0027.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0023.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0024.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0025.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0029.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0020.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0018.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0041.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0053.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0047.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0046.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0033.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0036.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0045.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0049.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0039.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0044.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0034.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0040.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0050.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0038.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0042.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0052.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0051.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0048.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0043.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0032.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0031.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0035.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0037.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00342.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00334.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00304.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00358.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00331.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00305.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00322.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00327.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00338.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00362.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00328.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00312.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00324.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00310.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00307.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00339.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00366.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00309.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00355.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00361.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00346.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00359.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00347.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00349.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00341.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00311.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00360.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00315.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00323.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00335.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00344.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00318.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00306.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00340.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00320.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00367.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00343.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00308.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0054.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00333.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00345.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00352.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00356.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00365.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00363.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00329.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00316.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00303.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00348.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00357.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00319.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00350.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00332.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00351.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00314.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00353.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00330.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0055.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00317.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00321.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00336.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00325.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00364.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00313.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00354.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00337.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00326.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001241.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001431.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001311.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001229.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001275.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001246.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001429.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001227.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001231.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001314.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001434.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001263.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001340.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001280.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001316.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001326.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001334.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001266.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001287.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001435.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001298.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001320.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001276.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001233.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001345.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001291.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001347.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001238.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001240.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001303.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001255.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001273.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001293.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001332.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001428.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001234.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001349.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001237.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001253.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001252.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001245.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001250.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001342.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001282.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001268.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001306.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001313.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001248.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001296.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001330.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001317.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001337.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001321.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001297.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001339.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001327.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001289.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001294.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001232.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001309.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001272.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001259.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001343.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001432.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001427.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001262.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001239.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001267.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001325.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001288.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001304.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001323.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001274.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001244.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001285.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001310.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001278.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001264.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001228.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001257.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001283.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001346.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001348.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001235.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001341.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001279.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001328.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001305.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001322.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001324.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001295.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001290.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001292.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001350.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001286.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001254.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001333.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001344.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001302.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001433.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001300.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001277.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001299.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001301.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001249.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001315.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001247.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001335.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001236.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001307.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001269.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001318.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001331.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001270.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001284.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001312.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001319.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001261.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001271.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001256.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001281.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001336.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001258.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001260.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001308.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001329.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001430.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001230.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001243.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001265.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001338.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001251.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001242.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001355.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001384.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001443.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001453.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001478.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001375.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001373.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001379.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001462.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001421.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001363.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001459.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001417.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001405.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001445.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001468.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001380.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001365.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001418.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001466.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001392.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001451.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001467.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001354.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001419.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001364.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001391.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001371.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001352.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001475.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001444.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001409.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001361.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001360.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001359.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001385.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001474.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001448.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001387.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001473.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001441.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001412.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001394.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001464.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001442.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001368.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001470.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001472.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001357.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001353.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001436.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001477.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001461.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001438.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001383.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001425.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001422.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001400.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001389.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001396.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001456.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001455.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001382.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001449.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001399.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001406.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001377.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001393.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001356.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001369.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001416.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001471.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001403.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001408.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001411.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001374.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001402.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001358.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001446.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001413.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001372.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001440.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001439.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001414.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001381.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001367.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001351.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001410.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001370.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001415.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001458.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001460.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001465.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001454.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001390.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001404.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001423.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001476.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001452.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001397.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001426.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001407.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001388.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001366.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001420.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001401.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001386.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001437.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001424.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001376.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001395.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001378.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001362.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001447.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001469.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001463.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001457.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001450.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001398.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001501.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001517.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001498.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001521.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001557.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001543.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0064.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001513.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001515.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001552.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001564.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001530.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001554.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001575.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001497.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0067.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001539.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001529.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001566.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0062.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001500.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001574.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0060.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001493.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001553.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001567.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001545.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001533.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001489.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001524.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001525.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0063.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001499.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001494.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001490.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001576.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001531.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001561.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0070.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001505.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001572.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001565.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001535.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0059.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001563.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001544.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001488.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001492.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0071.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001486.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001527.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001523.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001562.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001558.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001479.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001541.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001548.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001568.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0068.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001560.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001573.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0069.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001519.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0061.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001503.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001509.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001504.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001522.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001577.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001532.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001555.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001537.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0072.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001534.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001542.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001491.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001570.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0065.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001480.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001551.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001547.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0066.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001510.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001540.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001511.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001538.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001512.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001502.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001546.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001518.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001571.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001520.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001550.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001485.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001549.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001507.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001496.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001481.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001516.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001556.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001495.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001526.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001506.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001514.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0058.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001569.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001559.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001484.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001528.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001482.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001508.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001483.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001487.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/001536.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0089.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0094.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0091.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0093.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0080.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0074.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0075.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0087.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0090.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0086.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0084.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0083.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0088.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0081.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0082.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0056.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0092.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0085.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0096.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0073.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0079.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0057.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0076.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0095.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0077.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/0078.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00238.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00146.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00258.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00103.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00297.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00117.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00137.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00232.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00252.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00295.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00294.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00248.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00253.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00106.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00184.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00208.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00120.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00147.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00276.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00129.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00104.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00130.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00102.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00277.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00263.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00292.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00209.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00205.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00194.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00233.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00125.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00216.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00197.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00215.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00290.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00264.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00200.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00222.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00242.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00302.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00171.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00271.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00107.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00159.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00228.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00170.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00289.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00249.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00111.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00150.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00185.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00267.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00254.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00123.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00234.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00285.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00250.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00225.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00274.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00133.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00193.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00190.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00288.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00259.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00204.wav"
        string_val: "/content/drive/MyDrive/heartbeat artifact/00283.wav"
      }
    }
  }
}
node {
  name: "loader/TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "loader/normalize_element/component_0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "is_files"
    value {
      b: false
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_STRING
          }
        }
      }
    }
  }
}
node {
  name: "loader/buffer_size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1577
      }
    }
  }
}
node {
  name: "loader/seed"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "loader/seed2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "loader/ShuffleDataset"
  op: "ShuffleDataset"
  input: "loader/TensorSliceDataset"
  input: "loader/buffer_size"
  input: "loader/seed"
  input: "loader/seed2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_STRING
          }
        }
      }
    }
  }
}
node {
  name: "loader/count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "loader/RepeatDataset"
  op: "RepeatDataset"
  input: "loader/ShuffleDataset"
  input: "loader/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_STRING
          }
        }
      }
    }
  }
}
node {
  name: "loader/num_parallel_calls"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4
      }
    }
  }
}
node {
  name: "loader/ParallelMapDatasetV2"
  op: "ParallelMapDatasetV2"
  input: "loader/RepeatDataset"
  input: "loader/num_parallel_calls"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "deterministic"
    value {
      s: "default"
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map__decode_audio_shaped_306"
        attr {
          key: "_tf_data_function"
          value {
            b: true
          }
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: true
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "loader/FlatMapDataset"
  op: "FlatMapDataset"
  input: "loader/ParallelMapDatasetV2"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_flat_map__slice_dataset_wrapper_396"
        attr {
          key: "_tf_data_function"
          value {
            b: true
          }
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "loader/buffer_size_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4096
      }
    }
  }
}
node {
  name: "loader/seed_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "loader/seed2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "loader/ShuffleDataset_1"
  op: "ShuffleDataset"
  input: "loader/FlatMapDataset"
  input: "loader/buffer_size_1"
  input: "loader/seed_1"
  input: "loader/seed2_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "loader/batch_size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 128
      }
    }
  }
}
node {
  name: "loader/drop_remainder"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "loader/BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "loader/ShuffleDataset_1"
  input: "loader/batch_size"
  input: "loader/drop_remainder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "loader/buffer_size_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 512
      }
    }
  }
}
node {
  name: "loader/PrefetchDataset"
  op: "PrefetchDataset"
  input: "loader/BatchDatasetV2"
  input: "loader/buffer_size_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loader/BatchDatasetV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "buffer_size_min"
    value {
      i: 0
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "loader/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/cpu:0"
      }
    }
  }
}
node {
  name: "loader/WrapDatasetVariant"
  op: "WrapDatasetVariant"
  input: "loader/PrefetchDataset"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loader/GeneratorDataset"
  op: "GeneratorDataset"
  input: "loader/Const"
  input: "loader/WrapDatasetVariant"
  input: "loader/Const"
  input: "loader/Const"
  device: "/device:GPU:0"
  attr {
    key: "Tfinalize_func_args"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "Tinit_func_args"
    value {
      list {
        type: DT_STRING
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "Tnext_func_args"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "finalize_func"
    value {
      func {
        name: "__inference__remote_finalize_func_446"
      }
    }
  }
  attr {
    key: "init_func"
    value {
      func {
        name: "__inference__remote_init_func_421"
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "next_func"
    value {
      func {
        name: "__inference__remote_next_func_434"
        attr {
          key: "experimental_ints_on_device"
          value {
            b: true
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "loader/buffer_size_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "loader/PrefetchDataset_1"
  op: "PrefetchDataset"
  input: "loader/GeneratorDataset"
  input: "loader/buffer_size_3"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loader/GeneratorDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "buffer_size_min"
    value {
      i: 0
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "loader/OneShotIterator"
  op: "OneShotIterator"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loader/GeneratorDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_gfxwy9dQEc8"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "loader/IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "loader/OneShotIterator"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loader/GeneratorDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loader/IteratorGetNext"
  op: "IteratorGetNext"
  input: "loader/OneShotIterator"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loader/GeneratorDataset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "loader/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "loader/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loader/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loader/strided_slice"
  op: "StridedSlice"
  input: "loader/IteratorGetNext"
  input: "loader/strided_slice/stack"
  input: "loader/strided_slice/stack_1"
  input: "loader/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_uniform/sub"
  op: "Sub"
  input: "random_uniform/max"
  input: "random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_uniform/mul"
  op: "Mul"
  input: "random_uniform/RandomUniform"
  input: "random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "random_uniform"
  op: "AddV2"
  input: "random_uniform/mul"
  input: "random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "G/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "G/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/strided_slice"
  op: "StridedSlice"
  input: "G/Shape"
  input: "G/strided_slice/stack"
  input: "G/strided_slice/stack_1"
  input: "G/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.019078504294157028
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019078504294157028
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "G/z_project/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "G/z_project/dense/kernel/Initializer/random_uniform/max"
  input: "G/z_project/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "G/z_project/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "G/z_project/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "G/z_project/dense/kernel/Initializer/random_uniform/mul"
  input: "G/z_project/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/z_project/dense/kernel"
    }
  }
}
node {
  name: "G/z_project/dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "G/z_project/dense/kernel"
  input: "G/z_project/dense/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Initializer/zeros"
  op: "Fill"
  input: "G/z_project/dense/bias/Initializer/zeros/shape_as_tensor"
  input: "G/z_project/dense/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/z_project/dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/z_project/dense/bias"
    }
  }
}
node {
  name: "G/z_project/dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Assign"
  op: "AssignVariableOp"
  input: "G/z_project/dense/bias"
  input: "G/z_project/dense/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/z_project/dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/MatMul"
  op: "MatMul"
  input: "random_uniform"
  input: "G/z_project/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "G/z_project/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/BiasAdd"
  op: "BiasAdd"
  input: "G/z_project/dense/MatMul"
  input: "G/z_project/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "G/z_project/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "G/z_project/Reshape/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "G/z_project/Reshape/shape"
  op: "Pack"
  input: "G/strided_slice"
  input: "G/z_project/Reshape/shape/1"
  input: "G/z_project/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "G/z_project/Reshape"
  op: "Reshape"
  input: "G/z_project/dense/BiasAdd"
  input: "G/z_project/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "G/Relu"
  op: "Relu"
  input: "G/z_project/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_0/ExpandDims"
  op: "ExpandDims"
  input: "G/Relu"
  input: "G/upconv_0/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.012500000186264515
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.012500000186264515
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/max"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_0/conv2d_transpose/kernel"
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel"
  input: "G/upconv_0/conv2d_transpose/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_0/conv2d_transpose/bias"
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias"
  input: "G/upconv_0/conv2d_transpose/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_0/conv2d_transpose/Shape"
  input: "G/upconv_0/conv2d_transpose/strided_slice/stack"
  input: "G/upconv_0/conv2d_transpose/strided_slice/stack_1"
  input: "G/upconv_0/conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/stack"
  op: "Pack"
  input: "G/upconv_0/conv2d_transpose/strided_slice"
  input: "G/upconv_0/conv2d_transpose/stack/1"
  input: "G/upconv_0/conv2d_transpose/stack/2"
  input: "G/upconv_0/conv2d_transpose/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "G/upconv_0/conv2d_transpose/stack"
  input: "G/upconv_0/conv2d_transpose/strided_slice_1/stack"
  input: "G/upconv_0/conv2d_transpose/strided_slice_1/stack_1"
  input: "G/upconv_0/conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "G/upconv_0/conv2d_transpose/stack"
  input: "G/upconv_0/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  input: "G/upconv_0/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "G/upconv_0/conv2d_transpose/conv2d_transpose"
  input: "G/upconv_0/conv2d_transpose/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "G/upconv_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_0/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_0/conv2d_transpose/BiasAdd"
  input: "G/upconv_0/strided_slice/stack"
  input: "G/upconv_0/strided_slice/stack_1"
  input: "G/upconv_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "G/Relu_1"
  op: "Relu"
  input: "G/upconv_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_1/ExpandDims"
  op: "ExpandDims"
  input: "G/Relu_1"
  input: "G/upconv_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.01767767034471035
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01767767034471035
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/max"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_1/conv2d_transpose/kernel"
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel"
  input: "G/upconv_1/conv2d_transpose/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_1/conv2d_transpose/bias"
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias"
  input: "G/upconv_1/conv2d_transpose/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_1/conv2d_transpose/Shape"
  input: "G/upconv_1/conv2d_transpose/strided_slice/stack"
  input: "G/upconv_1/conv2d_transpose/strided_slice/stack_1"
  input: "G/upconv_1/conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/stack"
  op: "Pack"
  input: "G/upconv_1/conv2d_transpose/strided_slice"
  input: "G/upconv_1/conv2d_transpose/stack/1"
  input: "G/upconv_1/conv2d_transpose/stack/2"
  input: "G/upconv_1/conv2d_transpose/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "G/upconv_1/conv2d_transpose/stack"
  input: "G/upconv_1/conv2d_transpose/strided_slice_1/stack"
  input: "G/upconv_1/conv2d_transpose/strided_slice_1/stack_1"
  input: "G/upconv_1/conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "G/upconv_1/conv2d_transpose/stack"
  input: "G/upconv_1/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  input: "G/upconv_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "G/upconv_1/conv2d_transpose/conv2d_transpose"
  input: "G/upconv_1/conv2d_transpose/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "G/upconv_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_1/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_1/conv2d_transpose/BiasAdd"
  input: "G/upconv_1/strided_slice/stack"
  input: "G/upconv_1/strided_slice/stack_1"
  input: "G/upconv_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "G/Relu_2"
  op: "Relu"
  input: "G/upconv_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_2/ExpandDims"
  op: "ExpandDims"
  input: "G/Relu_2"
  input: "G/upconv_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02500000037252903
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/max"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_2/conv2d_transpose/kernel"
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel"
  input: "G/upconv_2/conv2d_transpose/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_2/conv2d_transpose/bias"
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias"
  input: "G/upconv_2/conv2d_transpose/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_2/conv2d_transpose/Shape"
  input: "G/upconv_2/conv2d_transpose/strided_slice/stack"
  input: "G/upconv_2/conv2d_transpose/strided_slice/stack_1"
  input: "G/upconv_2/conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/stack"
  op: "Pack"
  input: "G/upconv_2/conv2d_transpose/strided_slice"
  input: "G/upconv_2/conv2d_transpose/stack/1"
  input: "G/upconv_2/conv2d_transpose/stack/2"
  input: "G/upconv_2/conv2d_transpose/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "G/upconv_2/conv2d_transpose/stack"
  input: "G/upconv_2/conv2d_transpose/strided_slice_1/stack"
  input: "G/upconv_2/conv2d_transpose/strided_slice_1/stack_1"
  input: "G/upconv_2/conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "G/upconv_2/conv2d_transpose/stack"
  input: "G/upconv_2/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  input: "G/upconv_2/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "G/upconv_2/conv2d_transpose/conv2d_transpose"
  input: "G/upconv_2/conv2d_transpose/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "G/upconv_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_2/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_2/conv2d_transpose/BiasAdd"
  input: "G/upconv_2/strided_slice/stack"
  input: "G/upconv_2/strided_slice/stack_1"
  input: "G/upconv_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "G/Relu_3"
  op: "Relu"
  input: "G/upconv_2/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_3/ExpandDims"
  op: "ExpandDims"
  input: "G/Relu_3"
  input: "G/upconv_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0353553406894207
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0353553406894207
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/max"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_3/conv2d_transpose/kernel"
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel"
  input: "G/upconv_3/conv2d_transpose/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_3/conv2d_transpose/bias"
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias"
  input: "G/upconv_3/conv2d_transpose/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_3/conv2d_transpose/Shape"
  input: "G/upconv_3/conv2d_transpose/strided_slice/stack"
  input: "G/upconv_3/conv2d_transpose/strided_slice/stack_1"
  input: "G/upconv_3/conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/stack"
  op: "Pack"
  input: "G/upconv_3/conv2d_transpose/strided_slice"
  input: "G/upconv_3/conv2d_transpose/stack/1"
  input: "G/upconv_3/conv2d_transpose/stack/2"
  input: "G/upconv_3/conv2d_transpose/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "G/upconv_3/conv2d_transpose/stack"
  input: "G/upconv_3/conv2d_transpose/strided_slice_1/stack"
  input: "G/upconv_3/conv2d_transpose/strided_slice_1/stack_1"
  input: "G/upconv_3/conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "G/upconv_3/conv2d_transpose/stack"
  input: "G/upconv_3/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  input: "G/upconv_3/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "G/upconv_3/conv2d_transpose/conv2d_transpose"
  input: "G/upconv_3/conv2d_transpose/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "G/upconv_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_3/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_3/conv2d_transpose/BiasAdd"
  input: "G/upconv_3/strided_slice/stack"
  input: "G/upconv_3/strided_slice/stack_1"
  input: "G/upconv_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "G/Relu_4"
  op: "Relu"
  input: "G/upconv_3/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_4/ExpandDims"
  op: "ExpandDims"
  input: "G/Relu_4"
  input: "G/upconv_4/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.060764361172914505
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.060764361172914505
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/max"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/RandomUniform"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/mul"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_4/conv2d_transpose/kernel"
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel"
  input: "G/upconv_4/conv2d_transpose/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_4/conv2d_transpose/bias"
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias"
  input: "G/upconv_4/conv2d_transpose/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_4/conv2d_transpose/Shape"
  input: "G/upconv_4/conv2d_transpose/strided_slice/stack"
  input: "G/upconv_4/conv2d_transpose/strided_slice/stack_1"
  input: "G/upconv_4/conv2d_transpose/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/stack/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/stack"
  op: "Pack"
  input: "G/upconv_4/conv2d_transpose/strided_slice"
  input: "G/upconv_4/conv2d_transpose/stack/1"
  input: "G/upconv_4/conv2d_transpose/stack/2"
  input: "G/upconv_4/conv2d_transpose/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/strided_slice_1"
  op: "StridedSlice"
  input: "G/upconv_4/conv2d_transpose/stack"
  input: "G/upconv_4/conv2d_transpose/strided_slice_1/stack"
  input: "G/upconv_4/conv2d_transpose/strided_slice_1/stack_1"
  input: "G/upconv_4/conv2d_transpose/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "G/upconv_4/conv2d_transpose/stack"
  input: "G/upconv_4/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  input: "G/upconv_4/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/BiasAdd"
  op: "BiasAdd"
  input: "G/upconv_4/conv2d_transpose/conv2d_transpose"
  input: "G/upconv_4/conv2d_transpose/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "G/upconv_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_4/strided_slice"
  op: "StridedSlice"
  input: "G/upconv_4/conv2d_transpose/BiasAdd"
  input: "G/upconv_4/strided_slice/stack"
  input: "G/upconv_4/strided_slice/stack_1"
  input: "G/upconv_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "G/Tanh"
  op: "Tanh"
  input: "G/upconv_4/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "x/sample_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16000.0
      }
    }
  }
}
node {
  name: "x/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x"
      }
    }
  }
}
node {
  name: "x"
  op: "AudioSummaryV2"
  input: "x/tag"
  input: "loader/strided_slice"
  input: "x/sample_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "max_outputs"
    value {
      i: 3
    }
  }
}
node {
  name: "G_z/sample_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16000.0
      }
    }
  }
}
node {
  name: "G_z/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "G_z"
      }
    }
  }
}
node {
  name: "G_z"
  op: "AudioSummaryV2"
  input: "G_z/tag"
  input: "G/Tanh"
  input: "G_z/sample_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "max_outputs"
    value {
      i: 3
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "G/Tanh"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Square"
  input: "Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sqrt"
  op: "Sqrt"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "loader/strided_slice"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "Square_1"
  input: "Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sqrt_1"
  op: "Sqrt"
  input: "Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "x_rms_batch/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x_rms_batch"
      }
    }
  }
}
node {
  name: "x_rms_batch"
  op: "HistogramSummary"
  input: "x_rms_batch/tag"
  input: "Sqrt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G_z_rms_batch/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "G_z_rms_batch"
      }
    }
  }
}
node {
  name: "G_z_rms_batch"
  op: "HistogramSummary"
  input: "G_z_rms_batch/tag"
  input: "Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_2"
  op: "Mean"
  input: "Sqrt_1"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "x_rms/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x_rms"
      }
    }
  }
}
node {
  name: "x_rms"
  op: "ScalarSummary"
  input: "x_rms/tags"
  input: "Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_3"
  op: "Mean"
  input: "Sqrt"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "G_z_rms/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "G_z_rms"
      }
    }
  }
}
node {
  name: "G_z_rms"
  op: "ScalarSummary"
  input: "G_z_rms/tags"
  input: "Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice"
  op: "StridedSlice"
  input: "D_x/D/Shape"
  input: "D_x/D/strided_slice/stack"
  input: "D_x/D/strided_slice/stack_1"
  input: "D_x/D/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.060764361172914505
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.060764361172914505
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/max"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/mul"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_0/conv1d/kernel"
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/kernel"
  input: "D/downconv_0/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_0/conv1d/bias"
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/bias"
  input: "D/downconv_0/conv1d/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "loader/strided_slice"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_x/D/downconv_0/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_0/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_x/D/downconv_0/conv1d/Conv1D/Squeeze"
  input: "D_x/D/downconv_0/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_x/D/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_x/D/mul"
  op: "Mul"
  input: "D_x/D/mul/x"
  input: "D_x/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum"
  op: "Maximum"
  input: "D_x/D/mul"
  input: "D_x/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform"
  op: "RandomUniformInt"
  input: "D_x/D/random_uniform/shape"
  input: "D_x/D/random_uniform/min"
  input: "D_x/D/random_uniform/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_1"
  op: "Maximum"
  input: "D_x/D/random_uniform"
  input: "D_x/D/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Neg"
  op: "Neg"
  input: "D_x/D/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_2"
  op: "Maximum"
  input: "D_x/D/Neg"
  input: "D_x/D/Maximum_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad/paddings/1"
  op: "Pack"
  input: "D_x/D/Maximum_1"
  input: "D_x/D/Maximum_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad/paddings"
  op: "Pack"
  input: "D_x/D/MirrorPad/paddings/0_1"
  input: "D_x/D/MirrorPad/paddings/1"
  input: "D_x/D/MirrorPad/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad"
  op: "MirrorPad"
  input: "D_x/D/Maximum"
  input: "D_x/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_x/D/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "D_x/D/add"
  op: "AddV2"
  input: "D_x/D/Maximum_2"
  input: "D_x/D/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_1/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_1/stack"
  op: "Pack"
  input: "D_x/D/strided_slice_1/stack/0"
  input: "D_x/D/Maximum_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_1/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_1/stack_1"
  op: "Pack"
  input: "D_x/D/strided_slice_1/stack_1/0"
  input: "D_x/D/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_1/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_1/stack_2"
  op: "Pack"
  input: "D_x/D/strided_slice_1/stack_2/0"
  input: "D_x/D/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_1"
  op: "StridedSlice"
  input: "D_x/D/MirrorPad"
  input: "D_x/D/strided_slice_1/stack"
  input: "D_x/D/strided_slice_1/stack_1"
  input: "D_x/D/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0353553406894207
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0353553406894207
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/max"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/mul"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_1/conv1d/kernel"
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/kernel"
  input: "D/downconv_1/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_1/conv1d/bias"
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/bias"
  input: "D/downconv_1/conv1d/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_x/D/strided_slice_1"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_x/D/downconv_1/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_x/D/downconv_1/conv1d/Conv1D/Squeeze"
  input: "D_x/D/downconv_1/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_x/D/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_x/D/mul_1"
  op: "Mul"
  input: "D_x/D/mul_1/x"
  input: "D_x/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_3"
  op: "Maximum"
  input: "D_x/D/mul_1"
  input: "D_x/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_1/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_1"
  op: "RandomUniformInt"
  input: "D_x/D/random_uniform_1/shape"
  input: "D_x/D/random_uniform_1/min"
  input: "D_x/D/random_uniform_1/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/Maximum_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_4"
  op: "Maximum"
  input: "D_x/D/random_uniform_1"
  input: "D_x/D/Maximum_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Neg_1"
  op: "Neg"
  input: "D_x/D/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_5"
  op: "Maximum"
  input: "D_x/D/Neg_1"
  input: "D_x/D/Maximum_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_1/paddings/1"
  op: "Pack"
  input: "D_x/D/Maximum_4"
  input: "D_x/D/Maximum_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad_1/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_1/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_1/paddings"
  op: "Pack"
  input: "D_x/D/MirrorPad_1/paddings/0_1"
  input: "D_x/D/MirrorPad_1/paddings/1"
  input: "D_x/D/MirrorPad_1/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad_1"
  op: "MirrorPad"
  input: "D_x/D/Maximum_3"
  input: "D_x/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_x/D/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "D_x/D/add_1"
  op: "AddV2"
  input: "D_x/D/Maximum_5"
  input: "D_x/D/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_2/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_2/stack"
  op: "Pack"
  input: "D_x/D/strided_slice_2/stack/0"
  input: "D_x/D/Maximum_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_2/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_2/stack_1"
  op: "Pack"
  input: "D_x/D/strided_slice_2/stack_1/0"
  input: "D_x/D/add_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_2/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_2/stack_2"
  op: "Pack"
  input: "D_x/D/strided_slice_2/stack_2/0"
  input: "D_x/D/Const_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_2"
  op: "StridedSlice"
  input: "D_x/D/MirrorPad_1"
  input: "D_x/D/strided_slice_2/stack"
  input: "D_x/D/strided_slice_2/stack_1"
  input: "D_x/D/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02500000037252903
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/max"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/mul"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_2/conv1d/kernel"
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/kernel"
  input: "D/downconv_2/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_2/conv1d/bias"
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/bias"
  input: "D/downconv_2/conv1d/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_x/D/strided_slice_2"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_x/D/downconv_2/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_2/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_x/D/downconv_2/conv1d/Conv1D/Squeeze"
  input: "D_x/D/downconv_2/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_x/D/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_x/D/mul_2"
  op: "Mul"
  input: "D_x/D/mul_2/x"
  input: "D_x/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_6"
  op: "Maximum"
  input: "D_x/D/mul_2"
  input: "D_x/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_2/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_2/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_2"
  op: "RandomUniformInt"
  input: "D_x/D/random_uniform_2/shape"
  input: "D_x/D/random_uniform_2/min"
  input: "D_x/D/random_uniform_2/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/Maximum_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_7"
  op: "Maximum"
  input: "D_x/D/random_uniform_2"
  input: "D_x/D/Maximum_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Neg_2"
  op: "Neg"
  input: "D_x/D/random_uniform_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_8"
  op: "Maximum"
  input: "D_x/D/Neg_2"
  input: "D_x/D/Maximum_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_2/paddings/1"
  op: "Pack"
  input: "D_x/D/Maximum_7"
  input: "D_x/D/Maximum_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad_2/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_2/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_2/paddings"
  op: "Pack"
  input: "D_x/D/MirrorPad_2/paddings/0_1"
  input: "D_x/D/MirrorPad_2/paddings/1"
  input: "D_x/D/MirrorPad_2/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad_2"
  op: "MirrorPad"
  input: "D_x/D/Maximum_6"
  input: "D_x/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_x/D/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "D_x/D/add_2"
  op: "AddV2"
  input: "D_x/D/Maximum_8"
  input: "D_x/D/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_3/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_3/stack"
  op: "Pack"
  input: "D_x/D/strided_slice_3/stack/0"
  input: "D_x/D/Maximum_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_3/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_3/stack_1"
  op: "Pack"
  input: "D_x/D/strided_slice_3/stack_1/0"
  input: "D_x/D/add_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_3/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_3/stack_2"
  op: "Pack"
  input: "D_x/D/strided_slice_3/stack_2/0"
  input: "D_x/D/Const_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_3"
  op: "StridedSlice"
  input: "D_x/D/MirrorPad_2"
  input: "D_x/D/strided_slice_3/stack"
  input: "D_x/D/strided_slice_3/stack_1"
  input: "D_x/D/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.01767767034471035
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01767767034471035
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/max"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/mul"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_3/conv1d/kernel"
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/kernel"
  input: "D/downconv_3/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_3/conv1d/bias"
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/bias"
  input: "D/downconv_3/conv1d/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_x/D/strided_slice_3"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_x/D/downconv_3/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_3/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_x/D/downconv_3/conv1d/Conv1D/Squeeze"
  input: "D_x/D/downconv_3/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_x/D/mul_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_x/D/mul_3"
  op: "Mul"
  input: "D_x/D/mul_3/x"
  input: "D_x/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_9"
  op: "Maximum"
  input: "D_x/D/mul_3"
  input: "D_x/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_3/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_3/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_x/D/random_uniform_3"
  op: "RandomUniformInt"
  input: "D_x/D/random_uniform_3/shape"
  input: "D_x/D/random_uniform_3/min"
  input: "D_x/D/random_uniform_3/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/Maximum_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_10"
  op: "Maximum"
  input: "D_x/D/random_uniform_3"
  input: "D_x/D/Maximum_10/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Neg_3"
  op: "Neg"
  input: "D_x/D/random_uniform_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_11"
  op: "Maximum"
  input: "D_x/D/Neg_3"
  input: "D_x/D/Maximum_11/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_3/paddings/1"
  op: "Pack"
  input: "D_x/D/Maximum_10"
  input: "D_x/D/Maximum_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad_3/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_3/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/MirrorPad_3/paddings"
  op: "Pack"
  input: "D_x/D/MirrorPad_3/paddings/0_1"
  input: "D_x/D/MirrorPad_3/paddings/1"
  input: "D_x/D/MirrorPad_3/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/MirrorPad_3"
  op: "MirrorPad"
  input: "D_x/D/Maximum_9"
  input: "D_x/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_x/D/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "D_x/D/add_3"
  op: "AddV2"
  input: "D_x/D/Maximum_11"
  input: "D_x/D/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_x/D/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_4/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_4/stack"
  op: "Pack"
  input: "D_x/D/strided_slice_4/stack/0"
  input: "D_x/D/Maximum_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_4/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_4/stack_1"
  op: "Pack"
  input: "D_x/D/strided_slice_4/stack_1/0"
  input: "D_x/D/add_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_4/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_x/D/strided_slice_4/stack_2"
  op: "Pack"
  input: "D_x/D/strided_slice_4/stack_2/0"
  input: "D_x/D/Const_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/strided_slice_4"
  op: "StridedSlice"
  input: "D_x/D/MirrorPad_3"
  input: "D_x/D/strided_slice_4/stack"
  input: "D_x/D/strided_slice_4/stack_1"
  input: "D_x/D/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.012500000186264515
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.012500000186264515
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/max"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/mul"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_4/conv1d/kernel"
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/kernel"
  input: "D/downconv_4/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_4/conv1d/bias/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_4/conv1d/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_4/conv1d/bias"
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/bias"
  input: "D/downconv_4/conv1d/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_x/D/strided_slice_4"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_x/D/downconv_4/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/downconv_4/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_x/D/downconv_4/conv1d/Conv1D/Squeeze"
  input: "D_x/D/downconv_4/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_x/D/mul_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_x/D/mul_4"
  op: "Mul"
  input: "D_x/D/mul_4/x"
  input: "D_x/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/Maximum_12"
  op: "Maximum"
  input: "D_x/D/mul_4"
  input: "D_x/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_x/D/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "D_x/D/Reshape/shape"
  op: "Pack"
  input: "D_x/D/strided_slice"
  input: "D_x/D/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_x/D/Reshape"
  op: "Reshape"
  input: "D_x/D/Maximum_12"
  input: "D_x/D/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.019136054441332817
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019136054441332817
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "D/output/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D/output/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "D/output/dense/kernel/Initializer/random_uniform/max"
  input: "D/output/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "D/output/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "D/output/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "D/output/dense/kernel/Initializer/random_uniform/mul"
  input: "D/output/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "D/output/dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/output/dense/kernel"
    }
  }
}
node {
  name: "D/output/dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "D/output/dense/kernel"
  input: "D/output/dense/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/output/dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/output/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/output/dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/output/dense/bias"
    }
  }
}
node {
  name: "D/output/dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/output/dense/bias/Assign"
  op: "AssignVariableOp"
  input: "D/output/dense/bias"
  input: "D/output/dense/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/output/dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/output/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/output/dense/MatMul"
  op: "MatMul"
  input: "D_x/D/Reshape"
  input: "D_x/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "D_x/D/output/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_x/D/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "D_x/D/output/dense/MatMul"
  input: "D_x/D/output/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_x/D/output/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/output/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/output/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_x/D/output/strided_slice"
  op: "StridedSlice"
  input: "D_x/D/output/dense/BiasAdd"
  input: "D_x/D/output/strided_slice/stack"
  input: "D_x/D/output/strided_slice/stack_1"
  input: "D_x/D/output/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "D_G_z/D/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice"
  op: "StridedSlice"
  input: "D_G_z/D/Shape"
  input: "D_G_z/D/strided_slice/stack"
  input: "D_G_z/D/strided_slice/stack_1"
  input: "D_G_z/D/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "G/Tanh"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_0/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze"
  input: "D_G_z/D/downconv_0/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_G_z/D/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_G_z/D/mul"
  op: "Mul"
  input: "D_G_z/D/mul/x"
  input: "D_G_z/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum"
  op: "Maximum"
  input: "D_G_z/D/mul"
  input: "D_G_z/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform"
  op: "RandomUniformInt"
  input: "D_G_z/D/random_uniform/shape"
  input: "D_G_z/D/random_uniform/min"
  input: "D_G_z/D/random_uniform/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_1"
  op: "Maximum"
  input: "D_G_z/D/random_uniform"
  input: "D_G_z/D/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Neg"
  op: "Neg"
  input: "D_G_z/D/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_2"
  op: "Maximum"
  input: "D_G_z/D/Neg"
  input: "D_G_z/D/Maximum_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad/paddings/1"
  op: "Pack"
  input: "D_G_z/D/Maximum_1"
  input: "D_G_z/D/Maximum_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad/paddings"
  op: "Pack"
  input: "D_G_z/D/MirrorPad/paddings/0_1"
  input: "D_G_z/D/MirrorPad/paddings/1"
  input: "D_G_z/D/MirrorPad/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad"
  op: "MirrorPad"
  input: "D_G_z/D/Maximum"
  input: "D_G_z/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_G_z/D/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "D_G_z/D/add"
  op: "AddV2"
  input: "D_G_z/D/Maximum_2"
  input: "D_G_z/D/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_1/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_1/stack"
  op: "Pack"
  input: "D_G_z/D/strided_slice_1/stack/0"
  input: "D_G_z/D/Maximum_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_1/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_1/stack_1"
  op: "Pack"
  input: "D_G_z/D/strided_slice_1/stack_1/0"
  input: "D_G_z/D/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_1/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_1/stack_2"
  op: "Pack"
  input: "D_G_z/D/strided_slice_1/stack_2/0"
  input: "D_G_z/D/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_1"
  op: "StridedSlice"
  input: "D_G_z/D/MirrorPad"
  input: "D_G_z/D/strided_slice_1/stack"
  input: "D_G_z/D/strided_slice_1/stack_1"
  input: "D_G_z/D/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_G_z/D/strided_slice_1"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze"
  input: "D_G_z/D/downconv_1/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_G_z/D/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_G_z/D/mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_1/x"
  input: "D_G_z/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_3"
  op: "Maximum"
  input: "D_G_z/D/mul_1"
  input: "D_G_z/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_1/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_1"
  op: "RandomUniformInt"
  input: "D_G_z/D/random_uniform_1/shape"
  input: "D_G_z/D/random_uniform_1/min"
  input: "D_G_z/D/random_uniform_1/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/Maximum_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_4"
  op: "Maximum"
  input: "D_G_z/D/random_uniform_1"
  input: "D_G_z/D/Maximum_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Neg_1"
  op: "Neg"
  input: "D_G_z/D/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_5"
  op: "Maximum"
  input: "D_G_z/D/Neg_1"
  input: "D_G_z/D/Maximum_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_1/paddings/1"
  op: "Pack"
  input: "D_G_z/D/Maximum_4"
  input: "D_G_z/D/Maximum_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_1/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_1/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_1/paddings"
  op: "Pack"
  input: "D_G_z/D/MirrorPad_1/paddings/0_1"
  input: "D_G_z/D/MirrorPad_1/paddings/1"
  input: "D_G_z/D/MirrorPad_1/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_1"
  op: "MirrorPad"
  input: "D_G_z/D/Maximum_3"
  input: "D_G_z/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_G_z/D/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "D_G_z/D/add_1"
  op: "AddV2"
  input: "D_G_z/D/Maximum_5"
  input: "D_G_z/D/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_2/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_2/stack"
  op: "Pack"
  input: "D_G_z/D/strided_slice_2/stack/0"
  input: "D_G_z/D/Maximum_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_2/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_2/stack_1"
  op: "Pack"
  input: "D_G_z/D/strided_slice_2/stack_1/0"
  input: "D_G_z/D/add_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_2/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_2/stack_2"
  op: "Pack"
  input: "D_G_z/D/strided_slice_2/stack_2/0"
  input: "D_G_z/D/Const_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_2"
  op: "StridedSlice"
  input: "D_G_z/D/MirrorPad_1"
  input: "D_G_z/D/strided_slice_2/stack"
  input: "D_G_z/D/strided_slice_2/stack_1"
  input: "D_G_z/D/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_G_z/D/strided_slice_2"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_2/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze"
  input: "D_G_z/D/downconv_2/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_G_z/D/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_G_z/D/mul_2"
  op: "Mul"
  input: "D_G_z/D/mul_2/x"
  input: "D_G_z/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_6"
  op: "Maximum"
  input: "D_G_z/D/mul_2"
  input: "D_G_z/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_2/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_2/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_2"
  op: "RandomUniformInt"
  input: "D_G_z/D/random_uniform_2/shape"
  input: "D_G_z/D/random_uniform_2/min"
  input: "D_G_z/D/random_uniform_2/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/Maximum_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_7"
  op: "Maximum"
  input: "D_G_z/D/random_uniform_2"
  input: "D_G_z/D/Maximum_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Neg_2"
  op: "Neg"
  input: "D_G_z/D/random_uniform_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_8"
  op: "Maximum"
  input: "D_G_z/D/Neg_2"
  input: "D_G_z/D/Maximum_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_2/paddings/1"
  op: "Pack"
  input: "D_G_z/D/Maximum_7"
  input: "D_G_z/D/Maximum_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_2/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_2/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_2/paddings"
  op: "Pack"
  input: "D_G_z/D/MirrorPad_2/paddings/0_1"
  input: "D_G_z/D/MirrorPad_2/paddings/1"
  input: "D_G_z/D/MirrorPad_2/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_2"
  op: "MirrorPad"
  input: "D_G_z/D/Maximum_6"
  input: "D_G_z/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_G_z/D/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "D_G_z/D/add_2"
  op: "AddV2"
  input: "D_G_z/D/Maximum_8"
  input: "D_G_z/D/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_3/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_3/stack"
  op: "Pack"
  input: "D_G_z/D/strided_slice_3/stack/0"
  input: "D_G_z/D/Maximum_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_3/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_3/stack_1"
  op: "Pack"
  input: "D_G_z/D/strided_slice_3/stack_1/0"
  input: "D_G_z/D/add_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_3/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_3/stack_2"
  op: "Pack"
  input: "D_G_z/D/strided_slice_3/stack_2/0"
  input: "D_G_z/D/Const_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_3"
  op: "StridedSlice"
  input: "D_G_z/D/MirrorPad_2"
  input: "D_G_z/D/strided_slice_3/stack"
  input: "D_G_z/D/strided_slice_3/stack_1"
  input: "D_G_z/D/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_G_z/D/strided_slice_3"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_3/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze"
  input: "D_G_z/D/downconv_3/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_G_z/D/mul_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_G_z/D/mul_3"
  op: "Mul"
  input: "D_G_z/D/mul_3/x"
  input: "D_G_z/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_9"
  op: "Maximum"
  input: "D_G_z/D/mul_3"
  input: "D_G_z/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_3/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_3/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_G_z/D/random_uniform_3"
  op: "RandomUniformInt"
  input: "D_G_z/D/random_uniform_3/shape"
  input: "D_G_z/D/random_uniform_3/min"
  input: "D_G_z/D/random_uniform_3/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/Maximum_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_10"
  op: "Maximum"
  input: "D_G_z/D/random_uniform_3"
  input: "D_G_z/D/Maximum_10/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Neg_3"
  op: "Neg"
  input: "D_G_z/D/random_uniform_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_11"
  op: "Maximum"
  input: "D_G_z/D/Neg_3"
  input: "D_G_z/D/Maximum_11/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_3/paddings/1"
  op: "Pack"
  input: "D_G_z/D/Maximum_10"
  input: "D_G_z/D/Maximum_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_3/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_3/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_3/paddings"
  op: "Pack"
  input: "D_G_z/D/MirrorPad_3/paddings/0_1"
  input: "D_G_z/D/MirrorPad_3/paddings/1"
  input: "D_G_z/D/MirrorPad_3/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/MirrorPad_3"
  op: "MirrorPad"
  input: "D_G_z/D/Maximum_9"
  input: "D_G_z/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_G_z/D/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "D_G_z/D/add_3"
  op: "AddV2"
  input: "D_G_z/D/Maximum_11"
  input: "D_G_z/D/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_4/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_4/stack"
  op: "Pack"
  input: "D_G_z/D/strided_slice_4/stack/0"
  input: "D_G_z/D/Maximum_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_4/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_4/stack_1"
  op: "Pack"
  input: "D_G_z/D/strided_slice_4/stack_1/0"
  input: "D_G_z/D/add_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_4/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_4/stack_2"
  op: "Pack"
  input: "D_G_z/D/strided_slice_4/stack_2/0"
  input: "D_G_z/D/Const_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/strided_slice_4"
  op: "StridedSlice"
  input: "D_G_z/D/MirrorPad_3"
  input: "D_G_z/D/strided_slice_4/stack"
  input: "D_G_z/D/strided_slice_4/stack_1"
  input: "D_G_z/D/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_G_z/D/strided_slice_4"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/downconv_4/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze"
  input: "D_G_z/D/downconv_4/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_G_z/D/mul_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_G_z/D/mul_4"
  op: "Mul"
  input: "D_G_z/D/mul_4/x"
  input: "D_G_z/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Maximum_12"
  op: "Maximum"
  input: "D_G_z/D/mul_4"
  input: "D_G_z/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "D_G_z/D/Reshape/shape"
  op: "Pack"
  input: "D_G_z/D/strided_slice"
  input: "D_G_z/D/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_G_z/D/Reshape"
  op: "Reshape"
  input: "D_G_z/D/Maximum_12"
  input: "D_G_z/D/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "D_G_z/D/output/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/output/dense/MatMul"
  op: "MatMul"
  input: "D_G_z/D/Reshape"
  input: "D_G_z/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "D_G_z/D/output/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_G_z/D/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "D_G_z/D/output/dense/MatMul"
  input: "D_G_z/D/output/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_G_z/D/output/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/output/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/output/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_G_z/D/output/strided_slice"
  op: "StridedSlice"
  input: "D_G_z/D/output/dense/BiasAdd"
  input: "D_G_z/D/output/strided_slice/stack"
  input: "D_G_z/D/output/strided_slice/stack_1"
  input: "D_G_z/D/output/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_4"
  op: "Mean"
  input: "D_G_z/D/output/strided_slice"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "Mean_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_5"
  op: "Mean"
  input: "D_G_z/D/output/strided_slice"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_6"
  op: "Mean"
  input: "D_x/D/output/strided_slice"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "Mean_5"
  input: "Mean_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_uniform_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "random_uniform_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_uniform_1/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_uniform_1/sub"
  op: "Sub"
  input: "random_uniform_1/max"
  input: "random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_uniform_1/mul"
  op: "Mul"
  input: "random_uniform_1/RandomUniform"
  input: "random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "random_uniform_1"
  op: "AddV2"
  input: "random_uniform_1/mul"
  input: "random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "G/Tanh"
  input: "loader/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "random_uniform_1"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "loader/strided_slice"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice"
  op: "StridedSlice"
  input: "D_interp/D/Shape"
  input: "D_interp/D/strided_slice/stack"
  input: "D_interp/D/strided_slice/stack_1"
  input: "D_interp/D/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "add"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_interp/D/downconv_0/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_0/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/Squeeze"
  input: "D_interp/D/downconv_0/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_interp/D/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_interp/D/mul"
  op: "Mul"
  input: "D_interp/D/mul/x"
  input: "D_interp/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum"
  op: "Maximum"
  input: "D_interp/D/mul"
  input: "D_interp/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform"
  op: "RandomUniformInt"
  input: "D_interp/D/random_uniform/shape"
  input: "D_interp/D/random_uniform/min"
  input: "D_interp/D/random_uniform/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_1"
  op: "Maximum"
  input: "D_interp/D/random_uniform"
  input: "D_interp/D/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Neg"
  op: "Neg"
  input: "D_interp/D/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_2"
  op: "Maximum"
  input: "D_interp/D/Neg"
  input: "D_interp/D/Maximum_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad/paddings/1"
  op: "Pack"
  input: "D_interp/D/Maximum_1"
  input: "D_interp/D/Maximum_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad/paddings"
  op: "Pack"
  input: "D_interp/D/MirrorPad/paddings/0_1"
  input: "D_interp/D/MirrorPad/paddings/1"
  input: "D_interp/D/MirrorPad/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad"
  op: "MirrorPad"
  input: "D_interp/D/Maximum"
  input: "D_interp/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_interp/D/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4096
      }
    }
  }
}
node {
  name: "D_interp/D/add"
  op: "AddV2"
  input: "D_interp/D/Maximum_2"
  input: "D_interp/D/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_1/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_1/stack"
  op: "Pack"
  input: "D_interp/D/strided_slice_1/stack/0"
  input: "D_interp/D/Maximum_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_1/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_1/stack_1"
  op: "Pack"
  input: "D_interp/D/strided_slice_1/stack_1/0"
  input: "D_interp/D/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_1/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_1/stack_2"
  op: "Pack"
  input: "D_interp/D/strided_slice_1/stack_2/0"
  input: "D_interp/D/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_1"
  op: "StridedSlice"
  input: "D_interp/D/MirrorPad"
  input: "D_interp/D/strided_slice_1/stack"
  input: "D_interp/D/strided_slice_1/stack_1"
  input: "D_interp/D/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_interp/D/strided_slice_1"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_interp/D/downconv_1/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_1/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/Squeeze"
  input: "D_interp/D/downconv_1/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_interp/D/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_interp/D/mul_1"
  op: "Mul"
  input: "D_interp/D/mul_1/x"
  input: "D_interp/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_3"
  op: "Maximum"
  input: "D_interp/D/mul_1"
  input: "D_interp/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_1/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_1"
  op: "RandomUniformInt"
  input: "D_interp/D/random_uniform_1/shape"
  input: "D_interp/D/random_uniform_1/min"
  input: "D_interp/D/random_uniform_1/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/Maximum_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_4"
  op: "Maximum"
  input: "D_interp/D/random_uniform_1"
  input: "D_interp/D/Maximum_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Neg_1"
  op: "Neg"
  input: "D_interp/D/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_5"
  op: "Maximum"
  input: "D_interp/D/Neg_1"
  input: "D_interp/D/Maximum_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_1/paddings/1"
  op: "Pack"
  input: "D_interp/D/Maximum_4"
  input: "D_interp/D/Maximum_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_1/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_1/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_1/paddings"
  op: "Pack"
  input: "D_interp/D/MirrorPad_1/paddings/0_1"
  input: "D_interp/D/MirrorPad_1/paddings/1"
  input: "D_interp/D/MirrorPad_1/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_1"
  op: "MirrorPad"
  input: "D_interp/D/Maximum_3"
  input: "D_interp/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_interp/D/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "D_interp/D/add_1"
  op: "AddV2"
  input: "D_interp/D/Maximum_5"
  input: "D_interp/D/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_2/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_2/stack"
  op: "Pack"
  input: "D_interp/D/strided_slice_2/stack/0"
  input: "D_interp/D/Maximum_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_2/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_2/stack_1"
  op: "Pack"
  input: "D_interp/D/strided_slice_2/stack_1/0"
  input: "D_interp/D/add_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_2/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_2/stack_2"
  op: "Pack"
  input: "D_interp/D/strided_slice_2/stack_2/0"
  input: "D_interp/D/Const_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_2"
  op: "StridedSlice"
  input: "D_interp/D/MirrorPad_1"
  input: "D_interp/D/strided_slice_2/stack"
  input: "D_interp/D/strided_slice_2/stack_1"
  input: "D_interp/D/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_interp/D/strided_slice_2"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_interp/D/downconv_2/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_2/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/Squeeze"
  input: "D_interp/D/downconv_2/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_interp/D/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_interp/D/mul_2"
  op: "Mul"
  input: "D_interp/D/mul_2/x"
  input: "D_interp/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_6"
  op: "Maximum"
  input: "D_interp/D/mul_2"
  input: "D_interp/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_2/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_2/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_2"
  op: "RandomUniformInt"
  input: "D_interp/D/random_uniform_2/shape"
  input: "D_interp/D/random_uniform_2/min"
  input: "D_interp/D/random_uniform_2/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/Maximum_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_7"
  op: "Maximum"
  input: "D_interp/D/random_uniform_2"
  input: "D_interp/D/Maximum_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Neg_2"
  op: "Neg"
  input: "D_interp/D/random_uniform_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_8"
  op: "Maximum"
  input: "D_interp/D/Neg_2"
  input: "D_interp/D/Maximum_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_2/paddings/1"
  op: "Pack"
  input: "D_interp/D/Maximum_7"
  input: "D_interp/D/Maximum_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_2/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_2/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_2/paddings"
  op: "Pack"
  input: "D_interp/D/MirrorPad_2/paddings/0_1"
  input: "D_interp/D/MirrorPad_2/paddings/1"
  input: "D_interp/D/MirrorPad_2/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_2"
  op: "MirrorPad"
  input: "D_interp/D/Maximum_6"
  input: "D_interp/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_interp/D/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "D_interp/D/add_2"
  op: "AddV2"
  input: "D_interp/D/Maximum_8"
  input: "D_interp/D/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_3/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_3/stack"
  op: "Pack"
  input: "D_interp/D/strided_slice_3/stack/0"
  input: "D_interp/D/Maximum_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_3/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_3/stack_1"
  op: "Pack"
  input: "D_interp/D/strided_slice_3/stack_1/0"
  input: "D_interp/D/add_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_3/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_3/stack_2"
  op: "Pack"
  input: "D_interp/D/strided_slice_3/stack_2/0"
  input: "D_interp/D/Const_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_3"
  op: "StridedSlice"
  input: "D_interp/D/MirrorPad_2"
  input: "D_interp/D/strided_slice_3/stack"
  input: "D_interp/D/strided_slice_3/stack_1"
  input: "D_interp/D/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_interp/D/strided_slice_3"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_interp/D/downconv_3/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_3/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/Squeeze"
  input: "D_interp/D/downconv_3/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_interp/D/mul_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_interp/D/mul_3"
  op: "Mul"
  input: "D_interp/D/mul_3/x"
  input: "D_interp/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_9"
  op: "Maximum"
  input: "D_interp/D/mul_3"
  input: "D_interp/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_3/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_3/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "D_interp/D/random_uniform_3"
  op: "RandomUniformInt"
  input: "D_interp/D/random_uniform_3/shape"
  input: "D_interp/D/random_uniform_3/min"
  input: "D_interp/D/random_uniform_3/max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/Maximum_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_10"
  op: "Maximum"
  input: "D_interp/D/random_uniform_3"
  input: "D_interp/D/Maximum_10/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Neg_3"
  op: "Neg"
  input: "D_interp/D/random_uniform_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_11"
  op: "Maximum"
  input: "D_interp/D/Neg_3"
  input: "D_interp/D/Maximum_11/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_3/paddings/1"
  op: "Pack"
  input: "D_interp/D/Maximum_10"
  input: "D_interp/D/Maximum_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_3/paddings/0_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_3/paddings/2_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_3/paddings"
  op: "Pack"
  input: "D_interp/D/MirrorPad_3/paddings/0_1"
  input: "D_interp/D/MirrorPad_3/paddings/1"
  input: "D_interp/D/MirrorPad_3/paddings/2_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/MirrorPad_3"
  op: "MirrorPad"
  input: "D_interp/D/Maximum_9"
  input: "D_interp/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "D_interp/D/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "D_interp/D/add_3"
  op: "AddV2"
  input: "D_interp/D/Maximum_11"
  input: "D_interp/D/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_4/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_4/stack"
  op: "Pack"
  input: "D_interp/D/strided_slice_4/stack/0"
  input: "D_interp/D/Maximum_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_4/stack_1/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_4/stack_1"
  op: "Pack"
  input: "D_interp/D/strided_slice_4/stack_1/0"
  input: "D_interp/D/add_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_4/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "D_interp/D/strided_slice_4/stack_2"
  op: "Pack"
  input: "D_interp/D/strided_slice_4/stack_2/0"
  input: "D_interp/D/Const_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/strided_slice_4"
  op: "StridedSlice"
  input: "D_interp/D/MirrorPad_3"
  input: "D_interp/D/strided_slice_4/stack"
  input: "D_interp/D/strided_slice_4/stack_1"
  input: "D_interp/D/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims"
  op: "ExpandDims"
  input: "D_interp/D/strided_slice_4"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  op: "ExpandDims"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1/ReadVariableOp"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/Conv1D"
  op: "Conv2D"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/Conv1D/Squeeze"
  op: "Squeeze"
  input: "D_interp/D/downconv_4/conv1d/Conv1D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -3
      }
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/downconv_4/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/Squeeze"
  input: "D_interp/D/downconv_4/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_interp/D/mul_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "D_interp/D/mul_4"
  op: "Mul"
  input: "D_interp/D/mul_4/x"
  input: "D_interp/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Maximum_12"
  op: "Maximum"
  input: "D_interp/D/mul_4"
  input: "D_interp/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "D_interp/D/Reshape/shape"
  op: "Pack"
  input: "D_interp/D/strided_slice"
  input: "D_interp/D/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "D_interp/D/Reshape"
  op: "Reshape"
  input: "D_interp/D/Maximum_12"
  input: "D_interp/D/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "D_interp/D/output/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/output/dense/MatMul"
  op: "MatMul"
  input: "D_interp/D/Reshape"
  input: "D_interp/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "D_interp/D/output/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D_interp/D/output/dense/BiasAdd"
  op: "BiasAdd"
  input: "D_interp/D/output/dense/MatMul"
  input: "D_interp/D/output/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "D_interp/D/output/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/output/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/output/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D_interp/D/output/strided_slice"
  op: "StridedSlice"
  input: "D_interp/D/output/dense/BiasAdd"
  input: "D_interp/D/output/strided_slice/stack"
  input: "D_interp/D/output/strided_slice/stack_1"
  input: "D_interp/D/output/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/output/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients/grad_ys_0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/D_interp/D/output/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/dense/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/D_interp/D/output/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad"
  input: "D_interp/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/dense/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/output/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "D_interp/D/Reshape"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/output/dense/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/output/dense/MatMul_grad/MatMul"
  input: "gradients/D_interp/D/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/zeros_like"
  op: "Fill"
  input: "gradients/D_interp/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  input: "gradients/D_interp/D/Maximum_12_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_interp/D/mul_4"
  input: "D_interp/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/Maximum_12_grad/Shape"
  input: "gradients/D_interp/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_12_grad/GreaterEqual"
  input: "gradients/D_interp/D/Reshape_grad/Reshape"
  input: "gradients/D_interp/D/Maximum_12_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_12_grad/SelectV2"
  input: "gradients/D_interp/D/Maximum_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_12_grad/Sum"
  input: "gradients/D_interp/D/Maximum_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_12_grad/GreaterEqual"
  input: "gradients/D_interp/D/Maximum_12_grad/zeros_like"
  input: "gradients/D_interp/D/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_12_grad/SelectV2_1"
  input: "gradients/D_interp/D/Maximum_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_12_grad/Sum_1"
  input: "gradients/D_interp/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/mul_4_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/D_interp/D/mul_4_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/D_interp/D/Maximum_12_grad/Reshape"
  input: "D_interp/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/mul_4_grad/Mul"
  input: "gradients/D_interp/D/mul_4_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/mul_4_grad/Sum"
  input: "gradients/D_interp/D/mul_4_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_4_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_4/x"
  input: "gradients/D_interp/D/Maximum_12_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/D_interp/D/Maximum_12_grad/Reshape_1"
  input: "gradients/D_interp/D/mul_4_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_4_grad/Shape"
  op: "Shape"
  input: "D_interp/D/MirrorPad_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_4_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/D_interp/D/strided_slice_4_grad/Shape"
  input: "D_interp/D/strided_slice_4/stack"
  input: "D_interp/D/strided_slice_4/stack_1"
  input: "gradients/D_interp/D/strided_slice_4_grad/StridedSliceGrad/strides"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/D_interp/D/MirrorPad_3_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients/D_interp/D/strided_slice_4_grad/StridedSliceGrad"
  input: "D_interp/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/MirrorPad_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/zeros_like"
  op: "Fill"
  input: "gradients/D_interp/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  input: "gradients/D_interp/D/Maximum_9_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_interp/D/mul_3"
  input: "D_interp/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/Maximum_9_grad/Shape"
  input: "gradients/D_interp/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_9_grad/GreaterEqual"
  input: "gradients/D_interp/D/MirrorPad_3_grad/MirrorPadGrad"
  input: "gradients/D_interp/D/Maximum_9_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_9_grad/SelectV2"
  input: "gradients/D_interp/D/Maximum_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_9_grad/Sum"
  input: "gradients/D_interp/D/Maximum_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_9_grad/GreaterEqual"
  input: "gradients/D_interp/D/Maximum_9_grad/zeros_like"
  input: "gradients/D_interp/D/MirrorPad_3_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_9_grad/SelectV2_1"
  input: "gradients/D_interp/D/Maximum_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_9_grad/Sum_1"
  input: "gradients/D_interp/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/mul_3_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/D_interp/D/mul_3_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/D_interp/D/Maximum_9_grad/Reshape"
  input: "D_interp/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/mul_3_grad/Mul"
  input: "gradients/D_interp/D/mul_3_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/mul_3_grad/Sum"
  input: "gradients/D_interp/D/mul_3_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_3_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_3/x"
  input: "gradients/D_interp/D/Maximum_9_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/D_interp/D/Maximum_9_grad/Reshape_1"
  input: "gradients/D_interp/D/mul_3_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_1"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_3_grad/Shape"
  op: "Shape"
  input: "D_interp/D/MirrorPad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_3_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/D_interp/D/strided_slice_3_grad/Shape"
  input: "D_interp/D/strided_slice_3/stack"
  input: "D_interp/D/strided_slice_3/stack_1"
  input: "gradients/D_interp/D/strided_slice_3_grad/StridedSliceGrad/strides"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/D_interp/D/MirrorPad_2_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients/D_interp/D/strided_slice_3_grad/StridedSliceGrad"
  input: "D_interp/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/MirrorPad_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/zeros_like"
  op: "Fill"
  input: "gradients/D_interp/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  input: "gradients/D_interp/D/Maximum_6_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_interp/D/mul_2"
  input: "D_interp/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/Maximum_6_grad/Shape"
  input: "gradients/D_interp/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_6_grad/GreaterEqual"
  input: "gradients/D_interp/D/MirrorPad_2_grad/MirrorPadGrad"
  input: "gradients/D_interp/D/Maximum_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_6_grad/SelectV2"
  input: "gradients/D_interp/D/Maximum_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_6_grad/Sum"
  input: "gradients/D_interp/D/Maximum_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_6_grad/GreaterEqual"
  input: "gradients/D_interp/D/Maximum_6_grad/zeros_like"
  input: "gradients/D_interp/D/MirrorPad_2_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_6_grad/SelectV2_1"
  input: "gradients/D_interp/D/Maximum_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_6_grad/Sum_1"
  input: "gradients/D_interp/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/mul_2_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/D_interp/D/mul_2_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/D_interp/D/Maximum_6_grad/Reshape"
  input: "D_interp/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/mul_2_grad/Mul"
  input: "gradients/D_interp/D/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/mul_2_grad/Sum"
  input: "gradients/D_interp/D/mul_2_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_2_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_2/x"
  input: "gradients/D_interp/D/Maximum_6_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/D_interp/D/Maximum_6_grad/Reshape_1"
  input: "gradients/D_interp/D/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_2"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "D_interp/D/MirrorPad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_2_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/D_interp/D/strided_slice_2_grad/Shape"
  input: "D_interp/D/strided_slice_2/stack"
  input: "D_interp/D/strided_slice_2/stack_1"
  input: "gradients/D_interp/D/strided_slice_2_grad/StridedSliceGrad/strides"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/D_interp/D/MirrorPad_1_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients/D_interp/D/strided_slice_2_grad/StridedSliceGrad"
  input: "D_interp/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/MirrorPad_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/zeros_like"
  op: "Fill"
  input: "gradients/D_interp/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  input: "gradients/D_interp/D/Maximum_3_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_interp/D/mul_1"
  input: "D_interp/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/Maximum_3_grad/Shape"
  input: "gradients/D_interp/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_3_grad/GreaterEqual"
  input: "gradients/D_interp/D/MirrorPad_1_grad/MirrorPadGrad"
  input: "gradients/D_interp/D/Maximum_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_3_grad/SelectV2"
  input: "gradients/D_interp/D/Maximum_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_3_grad/Sum"
  input: "gradients/D_interp/D/Maximum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_3_grad/GreaterEqual"
  input: "gradients/D_interp/D/Maximum_3_grad/zeros_like"
  input: "gradients/D_interp/D/MirrorPad_1_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_3_grad/SelectV2_1"
  input: "gradients/D_interp/D/Maximum_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_3_grad/Sum_1"
  input: "gradients/D_interp/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/mul_1_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/D_interp/D/mul_1_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/D_interp/D/Maximum_3_grad/Reshape"
  input: "D_interp/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/mul_1_grad/Mul"
  input: "gradients/D_interp/D/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/mul_1_grad/Sum"
  input: "gradients/D_interp/D/mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_1/x"
  input: "gradients/D_interp/D/Maximum_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/D_interp/D/Maximum_3_grad/Reshape_1"
  input: "gradients/D_interp/D/mul_1_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_3"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "D_interp/D/MirrorPad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_1_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/D_interp/D/strided_slice_1_grad/Shape"
  input: "D_interp/D/strided_slice_1/stack"
  input: "D_interp/D/strided_slice_1/stack_1"
  input: "gradients/D_interp/D/strided_slice_1_grad/StridedSliceGrad/strides"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/D_interp/D/MirrorPad_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients/D_interp/D/strided_slice_1_grad/StridedSliceGrad"
  input: "D_interp/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/MirrorPad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/zeros_like"
  op: "Fill"
  input: "gradients/D_interp/D/Maximum_grad/zeros_like/shape_as_tensor"
  input: "gradients/D_interp/D/Maximum_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_interp/D/mul"
  input: "D_interp/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/Maximum_grad/Shape"
  input: "gradients/D_interp/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_grad/GreaterEqual"
  input: "gradients/D_interp/D/MirrorPad_grad/MirrorPadGrad"
  input: "gradients/D_interp/D/Maximum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_grad/SelectV2"
  input: "gradients/D_interp/D/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_grad/Sum"
  input: "gradients/D_interp/D/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_grad/GreaterEqual"
  input: "gradients/D_interp/D/Maximum_grad/zeros_like"
  input: "gradients/D_interp/D/MirrorPad_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/D_interp/D/Maximum_grad/SelectV2_1"
  input: "gradients/D_interp/D/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/D_interp/D/Maximum_grad/Sum_1"
  input: "gradients/D_interp/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/BroadcastGradientArgs/s0_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/D_interp/D/mul_grad/BroadcastGradientArgs/s0_1"
  input: "gradients/D_interp/D/mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/Mul"
  op: "Mul"
  input: "gradients/D_interp/D/Maximum_grad/Reshape"
  input: "D_interp/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/Sum"
  op: "Sum"
  input: "gradients/D_interp/D/mul_grad/Mul"
  input: "gradients/D_interp/D/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/mul_grad/Sum"
  input: "gradients/D_interp/D/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/mul_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul/x"
  input: "gradients/D_interp/D/Maximum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/D_interp/D/Maximum_grad/Reshape_1"
  input: "gradients/D_interp/D/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/Maximum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_4"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/Conv1D/Squeeze"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/Conv1D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Square_2"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sqrt_2"
  op: "Sqrt"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "Sqrt_2"
  input: "sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "pow/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "pow"
  op: "Pow"
  input: "sub_2"
  input: "pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_7"
  op: "Mean"
  input: "pow"
  input: "Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul_1/x"
  input: "Mean_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "sub"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "G_loss"
      }
    }
  }
}
node {
  name: "G_loss"
  op: "ScalarSummary"
  input: "G_loss/tags"
  input: "Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "D_loss"
      }
    }
  }
}
node {
  name: "D_loss"
  op: "ScalarSummary"
  input: "D_loss/tags"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/grad_ys_0"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Mean_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/Mean_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Neg_grad/Neg"
  input: "gradients_1/Mean_4_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Mean_4_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_1/Mean_4_grad/Tile"
  op: "Tile"
  input: "gradients_1/Mean_4_grad/Reshape"
  input: "gradients_1/Mean_4_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Mean_4_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "gradients_1/Mean_4_grad/truediv"
  op: "RealDiv"
  input: "gradients_1/Mean_4_grad/Tile"
  input: "gradients_1/Mean_4_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_1/Mean_4_grad/truediv"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_1/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_1/D_G_z/D/output/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/D_G_z/D/output/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  input: "D_G_z/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "D_G_z/D/Reshape"
  input: "gradients_1/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul"
  input: "^gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/D_G_z/D/output/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul"
  input: "^gradients_1/D_G_z/D/output/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/output/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
  input: "^gradients_1/D_G_z/D/output/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/output/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/zeros_like"
  op: "Fill"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_4"
  input: "D_G_z/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Shape"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/Reshape_grad/Reshape"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Sum"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/zeros_like"
  input: "gradients_1/D_G_z/D/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/SelectV2_1"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Sum_1"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/Maximum_12_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_12_grad/Reshape_1"
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/Reshape_1"
  input: "^gradients_1/D_G_z/D/Maximum_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/mul_4_grad/Mul"
  input: "gradients_1/D_G_z/D/mul_4_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/mul_4_grad/Sum"
  input: "gradients_1/D_G_z/D/mul_4_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_4/x"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/mul_4_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_4_grad/Reshape"
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_4_grad/Reshape"
  input: "^gradients_1/D_G_z/D/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_4_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_4_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN"
  op: "AddN"
  input: "gradients_1/D_G_z/D/Maximum_12_grad/tuple/control_dependency_1"
  input: "gradients_1/D_G_z/D/mul_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN"
  input: "^gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN"
  input: "^gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_4_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_4_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/D_G_z/D/strided_slice_4_grad/Shape"
  input: "D_G_z/D/strided_slice_4/stack"
  input: "D_G_z/D/strided_slice_4/stack_1"
  input: "gradients_1/D_G_z/D/strided_slice_4_grad/StridedSliceGrad/strides"
  input: "gradients_1/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/MirrorPad_3_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_1/D_G_z/D/strided_slice_4_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/zeros_like"
  op: "Fill"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_3"
  input: "D_G_z/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Shape"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/MirrorPad_3_grad/MirrorPadGrad"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Sum"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/zeros_like"
  input: "gradients_1/D_G_z/D/MirrorPad_3_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/SelectV2_1"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Sum_1"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/Maximum_9_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_9_grad/Reshape_1"
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/Reshape_1"
  input: "^gradients_1/D_G_z/D/Maximum_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/mul_3_grad/Mul"
  input: "gradients_1/D_G_z/D/mul_3_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/mul_3_grad/Sum"
  input: "gradients_1/D_G_z/D/mul_3_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_3/x"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/mul_3_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_3_grad/Reshape"
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_3_grad/Reshape"
  input: "^gradients_1/D_G_z/D/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_3_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_1"
  op: "AddN"
  input: "gradients_1/D_G_z/D/Maximum_9_grad/tuple/control_dependency_1"
  input: "gradients_1/D_G_z/D/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN_1"
  input: "^gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN_1"
  input: "^gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_3_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_3_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/D_G_z/D/strided_slice_3_grad/Shape"
  input: "D_G_z/D/strided_slice_3/stack"
  input: "D_G_z/D/strided_slice_3/stack_1"
  input: "gradients_1/D_G_z/D/strided_slice_3_grad/StridedSliceGrad/strides"
  input: "gradients_1/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/MirrorPad_2_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_1/D_G_z/D/strided_slice_3_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/zeros_like"
  op: "Fill"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_2"
  input: "D_G_z/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Shape"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/MirrorPad_2_grad/MirrorPadGrad"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Sum"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/zeros_like"
  input: "gradients_1/D_G_z/D/MirrorPad_2_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/SelectV2_1"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Sum_1"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/Maximum_6_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_6_grad/Reshape_1"
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/Reshape_1"
  input: "^gradients_1/D_G_z/D/Maximum_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/mul_2_grad/Mul"
  input: "gradients_1/D_G_z/D/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/mul_2_grad/Sum"
  input: "gradients_1/D_G_z/D/mul_2_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_2/x"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/mul_2_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_2_grad/Reshape"
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_2_grad/Reshape"
  input: "^gradients_1/D_G_z/D/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_2_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_2"
  op: "AddN"
  input: "gradients_1/D_G_z/D/Maximum_6_grad/tuple/control_dependency_1"
  input: "gradients_1/D_G_z/D/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN_2"
  input: "^gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN_2"
  input: "^gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_2_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/D_G_z/D/strided_slice_2_grad/Shape"
  input: "D_G_z/D/strided_slice_2/stack"
  input: "D_G_z/D/strided_slice_2/stack_1"
  input: "gradients_1/D_G_z/D/strided_slice_2_grad/StridedSliceGrad/strides"
  input: "gradients_1/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/MirrorPad_1_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_1/D_G_z/D/strided_slice_2_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/zeros_like"
  op: "Fill"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_1"
  input: "D_G_z/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Shape"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/MirrorPad_1_grad/MirrorPadGrad"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Sum"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/zeros_like"
  input: "gradients_1/D_G_z/D/MirrorPad_1_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/SelectV2_1"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Sum_1"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/Maximum_3_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_3_grad/Reshape_1"
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/Reshape_1"
  input: "^gradients_1/D_G_z/D/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/mul_1_grad/Mul"
  input: "gradients_1/D_G_z/D/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/mul_1_grad/Sum"
  input: "gradients_1/D_G_z/D/mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_1/x"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/mul_1_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_1_grad/Reshape"
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_1_grad/Reshape"
  input: "^gradients_1/D_G_z/D/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_1_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_3"
  op: "AddN"
  input: "gradients_1/D_G_z/D/Maximum_3_grad/tuple/control_dependency_1"
  input: "gradients_1/D_G_z/D/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN_3"
  input: "^gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN_3"
  input: "^gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_1_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/D_G_z/D/strided_slice_1_grad/Shape"
  input: "D_G_z/D/strided_slice_1/stack"
  input: "D_G_z/D/strided_slice_1/stack_1"
  input: "gradients_1/D_G_z/D/strided_slice_1_grad/StridedSliceGrad/strides"
  input: "gradients_1/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/MirrorPad_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_1/D_G_z/D/strided_slice_1_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/zeros_like"
  op: "Fill"
  input: "gradients_1/D_G_z/D/Maximum_grad/zeros_like/shape_as_tensor"
  input: "gradients_1/D_G_z/D/Maximum_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul"
  input: "D_G_z/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/D_G_z/D/Maximum_grad/Shape"
  input: "gradients_1/D_G_z/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/MirrorPad_grad/MirrorPadGrad"
  input: "gradients_1/D_G_z/D/Maximum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_grad/SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_grad/Sum"
  input: "gradients_1/D_G_z/D/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_1/D_G_z/D/Maximum_grad/GreaterEqual"
  input: "gradients_1/D_G_z/D/Maximum_grad/zeros_like"
  input: "gradients_1/D_G_z/D/MirrorPad_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/D_G_z/D/Maximum_grad/SelectV2_1"
  input: "gradients_1/D_G_z/D/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/Maximum_grad/Sum_1"
  input: "gradients_1/D_G_z/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/Maximum_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_grad/Reshape"
  input: "^gradients_1/D_G_z/D/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/Maximum_grad/Reshape_1"
  input: "^gradients_1/D_G_z/D/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/D_G_z/D/Maximum_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/D_G_z/D/mul_grad/Mul"
  input: "gradients_1/D_G_z/D/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/mul_grad/Sum"
  input: "gradients_1/D_G_z/D/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul/x"
  input: "gradients_1/D_G_z/D/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/mul_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_grad/Reshape"
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_grad/Reshape"
  input: "^gradients_1/D_G_z/D/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/mul_grad/Mul_1"
  input: "^gradients_1/D_G_z/D/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_4"
  op: "AddN"
  input: "gradients_1/D_G_z/D/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_1/D_G_z/D/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/AddN_4"
  input: "^gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/AddN_4"
  input: "^gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "G/Tanh"
  input: "gradients_1/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_1/G/Tanh_grad/TanhGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_4/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Shape"
  input: "G/upconv_4/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "G/upconv_4/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_4/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/G/upconv_4/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/Relu_4_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/G/upconv_4/ExpandDims_grad/Reshape"
  input: "G/Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_1/G/Relu_4_grad/ReluGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_3/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Shape"
  input: "G/upconv_3/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "G/upconv_3/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_3/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/G/upconv_3/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/G/upconv_3/ExpandDims_grad/Reshape"
  input: "G/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_1/G/Relu_3_grad/ReluGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_2/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Shape"
  input: "G/upconv_2/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "G/upconv_2/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_2/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/G/upconv_2/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/G/upconv_2/ExpandDims_grad/Reshape"
  input: "G/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_1/G/Relu_2_grad/ReluGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_1/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Shape"
  input: "G/upconv_1/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "G/upconv_1/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_1/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/G/upconv_1/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/G/upconv_1/ExpandDims_grad/Reshape"
  input: "G/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_1/G/Relu_1_grad/ReluGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_0/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Shape"
  input: "G/upconv_0/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
  input: "G/upconv_0/conv2d_transpose/conv2d_transpose/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2D"
  input: "^gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/upconv_0/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients_1/G/upconv_0/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/G/upconv_0/ExpandDims_grad/Reshape"
  input: "G/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/z_project/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/G/z_project/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/G/Relu_grad/ReluGrad"
  input: "gradients_1/G/z_project/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/z_project/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/G/z_project/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/G/z_project/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/z_project/Reshape_grad/Reshape"
  input: "^gradients_1/G/z_project/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_1/G/z_project/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/z_project/Reshape_grad/Reshape"
  input: "^gradients_1/G/z_project/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/z_project/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/z_project/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/z_project/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_1/G/z_project/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/z_project/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/z_project/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/G/z_project/dense/BiasAdd_grad/tuple/control_dependency"
  input: "G/z_project/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/G/z_project/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "random_uniform"
  input: "gradients_1/G/z_project/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/G/z_project/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/G/z_project/dense/MatMul_grad/MatMul"
  input: "^gradients_1/G/z_project/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/G/z_project/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/G/z_project/dense/MatMul_grad/MatMul"
  input: "^gradients_1/G/z_project/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/z_project/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/G/z_project/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/G/z_project/dense/MatMul_grad/MatMul_1"
  input: "^gradients_1/G/z_project/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/G/z_project/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "G/z_project/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "G/z_project/dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/z_project/dense/kernel/Adam"
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/z_project/dense/kernel/Adam"
  input: "G/z_project/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "G/z_project/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "G/z_project/dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/z_project/dense/kernel/Adam_1"
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/z_project/dense/kernel/Adam_1"
  input: "G/z_project/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/z_project/dense/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "G/z_project/dense/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "G/z_project/dense/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/z_project/dense/bias/Adam"
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/z_project/dense/bias/Adam"
  input: "G/z_project/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16384
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "G/z_project/dense/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "G/z_project/dense/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/z_project/dense/bias/Adam_1"
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/z_project/dense/bias/Adam_1"
  input: "G/z_project/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/z_project/dense/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/z_project/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_0/conv2d_transpose/kernel/Adam"
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_0/conv2d_transpose/bias/Adam"
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam"
  input: "G/upconv_0/conv2d_transpose/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_0/conv2d_transpose/bias/Adam_1"
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_0/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_1/conv2d_transpose/kernel/Adam"
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_1/conv2d_transpose/bias/Adam"
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam"
  input: "G/upconv_1/conv2d_transpose/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_1/conv2d_transpose/bias/Adam_1"
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_1/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_2/conv2d_transpose/kernel/Adam"
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_2/conv2d_transpose/bias/Adam"
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam"
  input: "G/upconv_2/conv2d_transpose/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_2/conv2d_transpose/bias/Adam_1"
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_2/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_3/conv2d_transpose/kernel/Adam"
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_3/conv2d_transpose/bias/Adam"
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam"
  input: "G/upconv_3/conv2d_transpose/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_3/conv2d_transpose/bias/Adam_1"
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_3/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_4/conv2d_transpose/kernel/Adam"
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 25
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_4/conv2d_transpose/bias/Adam"
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam"
  input: "G/upconv_4/conv2d_transpose/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "G/upconv_4/conv2d_transpose/bias/Adam_1"
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "G/upconv_4/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_G/z_project/dense/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/z_project/dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/z_project/dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/z_project/dense/kernel"
  input: "G/z_project/dense/kernel/Adam"
  input: "G/z_project/dense/kernel/Adam_1"
  input: "Adam/update_G/z_project/dense/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/z_project/dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/z_project/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/z_project/dense/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/z_project/dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/z_project/dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/z_project/dense/bias"
  input: "G/z_project/dense/bias/Adam"
  input: "G/z_project/dense/bias/Adam_1"
  input: "Adam/update_G/z_project/dense/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/z_project/dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/z_project/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/z_project/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_0/conv2d_transpose/kernel"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  input: "Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_0/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_0/conv2d_transpose/bias"
  input: "G/upconv_0/conv2d_transpose/bias/Adam"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  input: "Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_0/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_1/conv2d_transpose/kernel"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  input: "Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_1/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_1/conv2d_transpose/bias"
  input: "G/upconv_1/conv2d_transpose/bias/Adam"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  input: "Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_1/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_1/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_2/conv2d_transpose/kernel"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  input: "Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_2/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_2/conv2d_transpose/bias"
  input: "G/upconv_2/conv2d_transpose/bias/Adam"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  input: "Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_2/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_2/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_3/conv2d_transpose/kernel"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  input: "Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_3/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_3/conv2d_transpose/bias"
  input: "G/upconv_3/conv2d_transpose/bias/Adam"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  input: "Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_3/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_3/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_4/conv2d_transpose/kernel"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  input: "Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_4/conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "G/upconv_4/conv2d_transpose/bias"
  input: "G/upconv_4/conv2d_transpose/bias/Adam"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  input: "Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients_1/G/upconv_4/conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_4/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@G/upconv_0/conv2d_transpose/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_0/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_1/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_2/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_3/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/bias/ResourceApplyAdam"
  input: "^Adam/update_G/upconv_4/conv2d_transpose/kernel/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_G/z_project/dense/kernel/ResourceApplyAdam"
}
node {
  name: "Adam/Const"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAddVariableOp"
  input: "global_step"
  input: "Adam/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients_2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_2/grad_ys_0"
  op: "Fill"
  input: "gradients_2/Shape"
  input: "gradients_2/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/grad_ys_0"
}
node {
  name: "gradients_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/grad_ys_0"
  input: "^gradients_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/grad_ys_0"
  input: "^gradients_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_grad/Neg"
  op: "Neg"
  input: "gradients_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/add_1_grad/tuple/control_dependency"
  input: "^gradients_2/sub_grad/Neg"
}
node {
  name: "gradients_2/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/add_1_grad/tuple/control_dependency"
  input: "^gradients_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/sub_grad/Neg"
  input: "^gradients_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/add_1_grad/tuple/control_dependency_1"
  input: "Mean_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients_2/add_1_grad/tuple/control_dependency_1"
  input: "mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/mul_1_grad/Mul"
  input: "^gradients_2/mul_1_grad/Mul_1"
}
node {
  name: "gradients_2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/mul_1_grad/Mul"
  input: "^gradients_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/mul_1_grad/Mul_1"
  input: "^gradients_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_5_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Mean_5_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/sub_grad/tuple/control_dependency"
  input: "gradients_2/Mean_5_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_5_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_2/Mean_5_grad/Tile"
  op: "Tile"
  input: "gradients_2/Mean_5_grad/Reshape"
  input: "gradients_2/Mean_5_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_5_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "gradients_2/Mean_5_grad/truediv"
  op: "RealDiv"
  input: "gradients_2/Mean_5_grad/Tile"
  input: "gradients_2/Mean_5_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_6_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Mean_6_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/sub_grad/tuple/control_dependency_1"
  input: "gradients_2/Mean_6_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_6_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_2/Mean_6_grad/Tile"
  op: "Tile"
  input: "gradients_2/Mean_6_grad/Reshape"
  input: "gradients_2/Mean_6_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_6_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "gradients_2/Mean_6_grad/truediv"
  op: "RealDiv"
  input: "gradients_2/Mean_6_grad/Tile"
  input: "gradients_2/Mean_6_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_7_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Mean_7_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_1_grad/tuple/control_dependency_1"
  input: "gradients_2/Mean_7_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_7_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_2/Mean_7_grad/Tile"
  op: "Tile"
  input: "gradients_2/Mean_7_grad/Reshape"
  input: "gradients_2/Mean_7_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Mean_7_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "gradients_2/Mean_7_grad/truediv"
  op: "RealDiv"
  input: "gradients_2/Mean_7_grad/Tile"
  input: "gradients_2/Mean_7_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_2/Mean_5_grad/truediv"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/shape"
  input: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/begin"
  input: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/end"
  input: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad/strides"
  input: "gradients_2/Mean_6_grad/truediv"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients_2/pow_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/pow_grad/BroadcastGradientArgs/s0"
  input: "gradients_2/pow_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/mul"
  op: "Mul"
  input: "gradients_2/Mean_7_grad/truediv"
  input: "pow/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/sub"
  op: "Sub"
  input: "pow/y"
  input: "gradients_2/pow_grad/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Pow"
  op: "Pow"
  input: "sub_2"
  input: "gradients_2/pow_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/mul_1"
  op: "Mul"
  input: "gradients_2/pow_grad/mul"
  input: "gradients_2/pow_grad/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Greater"
  op: "Greater"
  input: "sub_2"
  input: "gradients_2/pow_grad/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/ones_like/Shape/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/ones_like"
  op: "Fill"
  input: "gradients_2/pow_grad/ones_like/Shape/shape_as_tensor"
  input: "gradients_2/pow_grad/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/pow_grad/Select"
  op: "Select"
  input: "gradients_2/pow_grad/Greater"
  input: "sub_2"
  input: "gradients_2/pow_grad/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Log"
  op: "Log"
  input: "gradients_2/pow_grad/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Select_1"
  op: "Select"
  input: "gradients_2/pow_grad/Greater"
  input: "gradients_2/pow_grad/Log"
  input: "gradients_2/pow_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/mul_2"
  op: "Mul"
  input: "gradients_2/Mean_7_grad/truediv"
  input: "pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/mul_3"
  op: "Mul"
  input: "gradients_2/pow_grad/mul_2"
  input: "gradients_2/pow_grad/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Sum"
  op: "Sum"
  input: "gradients_2/pow_grad/mul_3"
  input: "gradients_2/pow_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/pow_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/pow_grad/Sum"
  input: "gradients_2/pow_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/pow_grad/Reshape"
  input: "^gradients_2/pow_grad/mul_1"
}
node {
  name: "gradients_2/pow_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/pow_grad/mul_1"
  input: "^gradients_2/pow_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/pow_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/pow_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/pow_grad/Reshape"
  input: "^gradients_2/pow_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/pow_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/output/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/output/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad"
}
node {
  name: "gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad"
  input: "^gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/output/strided_slice_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/output/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/output/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/Neg"
  op: "Neg"
  input: "gradients_2/pow_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/sub_2_grad/Neg"
  input: "gradients_2/sub_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/sub_2_grad/Sum"
  input: "gradients_2/sub_2_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/pow_grad/tuple/control_dependency"
  input: "^gradients_2/sub_2_grad/Reshape"
}
node {
  name: "gradients_2/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/pow_grad/tuple/control_dependency"
  input: "^gradients_2/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/pow_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/sub_2_grad/Reshape"
  input: "^gradients_2/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/sub_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  input: "D_G_z/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "D_G_z/D/Reshape"
  input: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul"
  input: "^gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_2/D_G_z/D/output/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul"
  input: "^gradients_2/D_G_z/D/output/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/output/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
  input: "^gradients_2/D_G_z/D/output/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  input: "D_x/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "D_x/D/Reshape"
  input: "gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/output/dense/MatMul_grad/MatMul"
  input: "^gradients_2/D_x/D/output/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_2/D_x/D/output/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/output/dense/MatMul_grad/MatMul"
  input: "^gradients_2/D_x/D/output/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/output/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/output/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/output/dense/MatMul_grad/MatMul_1"
  input: "^gradients_2/D_x/D/output/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/output/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sqrt_2_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "Sqrt_2"
  input: "gradients_2/sub_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/output/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/output/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN"
  op: "AddN"
  input: "gradients_2/D_G_z/D/output/dense/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/output/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/output/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_2/Sum_grad/Maximum/x"
  input: "gradients_2/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/floordiv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_2/Sum_grad/floordiv/x"
  input: "gradients_2/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/Sqrt_2_grad/SqrtGrad"
  input: "gradients_2/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_2/Sum_grad/Reshape"
  input: "gradients_2/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_4"
  input: "D_G_z/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Shape"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/Reshape_grad/Reshape"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Sum"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/zeros_like"
  input: "gradients_2/D_G_z/D/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/SelectV2_1"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Sum_1"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/Maximum_12_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_12_grad/Reshape_1"
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/Reshape_1"
  input: "^gradients_2/D_G_z/D/Maximum_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_x/D/Maximum_12_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_x/D/Maximum_12_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_x/D/mul_4"
  input: "D_x/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_x/D/Maximum_12_grad/Shape"
  input: "gradients_2/D_x/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/D_x/D/Reshape_grad/Reshape"
  input: "gradients_2/D_x/D/Maximum_12_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_12_grad/SelectV2"
  input: "gradients_2/D_x/D/Maximum_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_12_grad/Sum"
  input: "gradients_2/D_x/D/Maximum_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/D_x/D/Maximum_12_grad/zeros_like"
  input: "gradients_2/D_x/D/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_12_grad/SelectV2_1"
  input: "gradients_2/D_x/D/Maximum_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_12_grad/Sum_1"
  input: "gradients_2/D_x/D/Maximum_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/Maximum_12_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_12_grad/Reshape_1"
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_12_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_12_grad/Reshape_1"
  input: "^gradients_2/D_x/D/Maximum_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Square_2_grad/Const"
  op: "Const"
  input: "^gradients_2/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_2/Square_2_grad/Mul"
  op: "Mul"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape"
  input: "gradients_2/Square_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Square_2_grad/Mul_1"
  op: "Mul"
  input: "gradients_2/Sum_grad/Tile"
  input: "gradients_2/Square_2_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/mul_4_grad/Mul"
  input: "gradients_2/D_G_z/D/mul_4_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/mul_4_grad/Sum"
  input: "gradients_2/D_G_z/D/mul_4_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_4/x"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/mul_4_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_4_grad/Reshape"
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_4_grad/Reshape"
  input: "^gradients_2/D_G_z/D/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_4_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_4_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_x/D/Maximum_12_grad/tuple/control_dependency"
  input: "D_x/D/downconv_4/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/mul_4_grad/Mul"
  input: "gradients_2/D_x/D/mul_4_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/mul_4_grad/Sum"
  input: "gradients_2/D_x/D/mul_4_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/Mul_1"
  op: "Mul"
  input: "D_x/D/mul_4/x"
  input: "gradients_2/D_x/D/Maximum_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/mul_4_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_4_grad/Reshape"
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_4_grad/Reshape"
  input: "^gradients_2/D_x/D/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_4_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_4_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/Square_2_grad/Mul_1"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_1"
  op: "AddN"
  input: "gradients_2/D_G_z/D/Maximum_12_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/mul_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_1"
  input: "^gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_1"
  input: "^gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_2"
  op: "AddN"
  input: "gradients_2/D_x/D/Maximum_12_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/mul_4_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_2"
  input: "^gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_2"
  input: "^gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  input: "gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/ShapeN"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_x/D/downconv_4/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_2/gradients/AddN_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/AddN_4_grad/tuple/control_dependency"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/gradients/AddN_4_grad/tuple/control_dependency_1"
  input: "gradients/D_interp/D/Maximum_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Mul"
  input: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul/x"
  input: "gradients_2/gradients/AddN_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Reshape"
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_4_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_4_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_G_z/D/strided_slice_4_grad/Shape"
  input: "D_G_z/D/strided_slice_4/stack"
  input: "D_G_z/D/strided_slice_4/stack_1"
  input: "gradients_2/D_G_z/D/strided_slice_4_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_4_grad/Shape"
  op: "Shape"
  input: "D_x/D/MirrorPad_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_4_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_x/D/strided_slice_4_grad/Shape"
  input: "D_x/D/strided_slice_4/stack"
  input: "D_x/D/strided_slice_4/stack_1"
  input: "gradients_2/D_x/D/strided_slice_4_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_grad/BroadcastGradientArgs:1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/MirrorPad_3_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_G_z/D/strided_slice_4_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/D_x/D/MirrorPad_3_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_x/D/strided_slice_4_grad/StridedSliceGrad"
  input: "D_x/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_1_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_grad/BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_3"
  input: "D_G_z/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Shape"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/MirrorPad_3_grad/MirrorPadGrad"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Sum"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/zeros_like"
  input: "gradients_2/D_G_z/D/MirrorPad_3_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/SelectV2_1"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Sum_1"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/Maximum_9_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_9_grad/Reshape_1"
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/Reshape_1"
  input: "^gradients_2/D_G_z/D/Maximum_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_x/D/Maximum_9_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_x/D/Maximum_9_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_x/D/mul_3"
  input: "D_x/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_x/D/Maximum_9_grad/Shape"
  input: "gradients_2/D_x/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/D_x/D/MirrorPad_3_grad/MirrorPadGrad"
  input: "gradients_2/D_x/D/Maximum_9_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_9_grad/SelectV2"
  input: "gradients_2/D_x/D/Maximum_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_9_grad/Sum"
  input: "gradients_2/D_x/D/Maximum_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/D_x/D/Maximum_9_grad/zeros_like"
  input: "gradients_2/D_x/D/MirrorPad_3_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_9_grad/SelectV2_1"
  input: "gradients_2/D_x/D/Maximum_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_9_grad/Sum_1"
  input: "gradients_2/D_x/D/Maximum_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/Maximum_9_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_9_grad/Reshape_1"
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_9_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_9_grad/Reshape_1"
  input: "^gradients_2/D_x/D/Maximum_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/Sum_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/mul_3_grad/Mul"
  input: "gradients_2/D_G_z/D/mul_3_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/mul_3_grad/Sum"
  input: "gradients_2/D_G_z/D/mul_3_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_3/x"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/mul_3_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_3_grad/Reshape"
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_3_grad/Reshape"
  input: "^gradients_2/D_G_z/D/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_3_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_x/D/Maximum_9_grad/tuple/control_dependency"
  input: "D_x/D/downconv_3/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/mul_3_grad/Mul"
  input: "gradients_2/D_x/D/mul_3_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/mul_3_grad/Sum"
  input: "gradients_2/D_x/D/mul_3_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/Mul_1"
  op: "Mul"
  input: "D_x/D/mul_3/x"
  input: "gradients_2/D_x/D/Maximum_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/mul_3_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_3_grad/Reshape"
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_3_grad/Reshape"
  input: "^gradients_2/D_x/D/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_3_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_3_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_3"
  op: "AddN"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/MirrorPad_grad/MirrorPadGrad_grad/MirrorPad"
  op: "MirrorPad"
  input: "gradients_2/AddN_3"
  input: "D_interp/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/AddN_4"
  op: "AddN"
  input: "gradients_2/D_G_z/D/Maximum_9_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_4"
  input: "^gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_4"
  input: "^gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_5"
  op: "AddN"
  input: "gradients_2/D_x/D/Maximum_9_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_5"
  input: "^gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_5"
  input: "^gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_2/gradients/D_interp/D/MirrorPad_grad/MirrorPadGrad_grad/MirrorPad"
  input: "D_interp/D/strided_slice_1/stack"
  input: "D_interp/D/strided_slice_1/stack_1"
  input: "gradients/D_interp/D/strided_slice_1_grad/StridedSliceGrad/strides"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/strided_slice_1_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/ShapeN"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_x/D/downconv_3/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  input: "gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_3_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_3_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_G_z/D/strided_slice_3_grad/Shape"
  input: "D_G_z/D/strided_slice_3/stack"
  input: "D_G_z/D/strided_slice_3/stack_1"
  input: "gradients_2/D_G_z/D/strided_slice_3_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_3_grad/Shape"
  op: "Shape"
  input: "D_x/D/MirrorPad_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_3_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_x/D/strided_slice_3_grad/Shape"
  input: "D_x/D/strided_slice_3/stack"
  input: "D_x/D/strided_slice_3/stack_1"
  input: "gradients_2/D_x/D/strided_slice_3_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_2/gradients/AddN_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/MirrorPad_2_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_G_z/D/strided_slice_3_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/D_x/D/MirrorPad_2_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_x/D/strided_slice_3_grad/StridedSliceGrad"
  input: "D_x/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/AddN_3_grad/tuple/control_dependency"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/gradients/AddN_3_grad/tuple/control_dependency_1"
  input: "gradients/D_interp/D/Maximum_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Mul"
  input: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_1/x"
  input: "gradients_2/gradients/AddN_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Reshape"
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_2"
  input: "D_G_z/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Shape"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/MirrorPad_2_grad/MirrorPadGrad"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Sum"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/zeros_like"
  input: "gradients_2/D_G_z/D/MirrorPad_2_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/SelectV2_1"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Sum_1"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/Maximum_6_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_6_grad/Reshape_1"
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/Reshape_1"
  input: "^gradients_2/D_G_z/D/Maximum_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_x/D/Maximum_6_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_x/D/Maximum_6_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_x/D/mul_2"
  input: "D_x/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_x/D/Maximum_6_grad/Shape"
  input: "gradients_2/D_x/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/D_x/D/MirrorPad_2_grad/MirrorPadGrad"
  input: "gradients_2/D_x/D/Maximum_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_6_grad/SelectV2"
  input: "gradients_2/D_x/D/Maximum_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_6_grad/Sum"
  input: "gradients_2/D_x/D/Maximum_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/D_x/D/Maximum_6_grad/zeros_like"
  input: "gradients_2/D_x/D/MirrorPad_2_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_6_grad/SelectV2_1"
  input: "gradients_2/D_x/D/Maximum_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_6_grad/Sum_1"
  input: "gradients_2/D_x/D/Maximum_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/Maximum_6_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_6_grad/Reshape_1"
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_6_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_6_grad/Reshape_1"
  input: "^gradients_2/D_x/D/Maximum_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_3_grad/BroadcastGradientArgs:1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_1_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/mul_2_grad/Mul"
  input: "gradients_2/D_G_z/D/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/mul_2_grad/Sum"
  input: "gradients_2/D_G_z/D/mul_2_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_2/x"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/mul_2_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_2_grad/Reshape"
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_2_grad/Reshape"
  input: "^gradients_2/D_G_z/D/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_2_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_x/D/Maximum_6_grad/tuple/control_dependency"
  input: "D_x/D/downconv_2/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/mul_2_grad/Mul"
  input: "gradients_2/D_x/D/mul_2_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/mul_2_grad/Sum"
  input: "gradients_2/D_x/D/mul_2_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/Mul_1"
  op: "Mul"
  input: "D_x/D/mul_2/x"
  input: "gradients_2/D_x/D/Maximum_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/mul_2_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_2_grad/Reshape"
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_2_grad/Reshape"
  input: "^gradients_2/D_x/D/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_2_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_1_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_3_grad/BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_6"
  op: "AddN"
  input: "gradients_2/D_G_z/D/Maximum_6_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_6"
  input: "^gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_6"
  input: "^gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_7"
  op: "AddN"
  input: "gradients_2/D_x/D/Maximum_6_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_7"
  input: "^gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_7"
  input: "^gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/Sum_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_8"
  op: "AddN"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_3_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/MirrorPad_1_grad/MirrorPadGrad_grad/MirrorPad"
  op: "MirrorPad"
  input: "gradients_2/AddN_8"
  input: "D_interp/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/ShapeN"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_x/D/downconv_2/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/strided_slice_2_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_2/gradients/D_interp/D/MirrorPad_1_grad/MirrorPadGrad_grad/MirrorPad"
  input: "D_interp/D/strided_slice_2/stack"
  input: "D_interp/D/strided_slice_2/stack_1"
  input: "gradients/D_interp/D/strided_slice_2_grad/StridedSliceGrad/strides"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/strided_slice_2_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_2_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_G_z/D/strided_slice_2_grad/Shape"
  input: "D_G_z/D/strided_slice_2/stack"
  input: "D_G_z/D/strided_slice_2/stack_1"
  input: "gradients_2/D_G_z/D/strided_slice_2_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "D_x/D/MirrorPad_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_2_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_x/D/strided_slice_2_grad/Shape"
  input: "D_x/D/strided_slice_2/stack"
  input: "D_x/D/strided_slice_2/stack_1"
  input: "gradients_2/D_x/D/strided_slice_2_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  input: "gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/MirrorPad_1_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_G_z/D/strided_slice_2_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/D_x/D/MirrorPad_1_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_x/D/strided_slice_2_grad/StridedSliceGrad"
  input: "D_x/D/MirrorPad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul_1"
  input: "D_G_z/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Shape"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/MirrorPad_1_grad/MirrorPadGrad"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Sum"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/zeros_like"
  input: "gradients_2/D_G_z/D/MirrorPad_1_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/SelectV2_1"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Sum_1"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/Maximum_3_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_3_grad/Reshape_1"
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/Reshape_1"
  input: "^gradients_2/D_G_z/D/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_x/D/Maximum_3_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_x/D/Maximum_3_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_x/D/mul_1"
  input: "D_x/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_x/D/Maximum_3_grad/Shape"
  input: "gradients_2/D_x/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/D_x/D/MirrorPad_1_grad/MirrorPadGrad"
  input: "gradients_2/D_x/D/Maximum_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_3_grad/SelectV2"
  input: "gradients_2/D_x/D/Maximum_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_3_grad/Sum"
  input: "gradients_2/D_x/D/Maximum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_3_grad/GreaterEqual"
  input: "gradients_2/D_x/D/Maximum_3_grad/zeros_like"
  input: "gradients_2/D_x/D/MirrorPad_1_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_3_grad/SelectV2_1"
  input: "gradients_2/D_x/D/Maximum_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_3_grad/Sum_1"
  input: "gradients_2/D_x/D/Maximum_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/Maximum_3_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_3_grad/Reshape_1"
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_3_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_3_grad/Reshape_1"
  input: "^gradients_2/D_x/D/Maximum_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_2/gradients/AddN_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/mul_1_grad/Mul"
  input: "gradients_2/D_G_z/D/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/mul_1_grad/Sum"
  input: "gradients_2/D_G_z/D/mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul_1/x"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/mul_1_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_1_grad/Reshape"
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_1_grad/Reshape"
  input: "^gradients_2/D_G_z/D/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_1_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_x/D/Maximum_3_grad/tuple/control_dependency"
  input: "D_x/D/downconv_1/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/mul_1_grad/Mul"
  input: "gradients_2/D_x/D/mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/mul_1_grad/Sum"
  input: "gradients_2/D_x/D/mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_x/D/mul_1/x"
  input: "gradients_2/D_x/D/Maximum_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/mul_1_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_1_grad/Reshape"
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_1_grad/Reshape"
  input: "^gradients_2/D_x/D/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_1_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/AddN_2_grad/tuple/control_dependency"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/gradients/AddN_2_grad/tuple/control_dependency_1"
  input: "gradients/D_interp/D/Maximum_6_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Mul"
  input: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_2/x"
  input: "gradients_2/gradients/AddN_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Reshape"
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_9"
  op: "AddN"
  input: "gradients_2/D_G_z/D/Maximum_3_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_9"
  input: "^gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_9"
  input: "^gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_10"
  op: "AddN"
  input: "gradients_2/D_x/D/Maximum_3_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_10"
  input: "^gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_10"
  input: "^gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_6_grad/BroadcastGradientArgs:1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_2_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\004\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_1_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_6_grad/BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/ShapeN"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_x/D/downconv_1/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_6_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/Sum_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_11"
  op: "AddN"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_6_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/MirrorPad_2_grad/MirrorPadGrad_grad/MirrorPad"
  op: "MirrorPad"
  input: "gradients_2/AddN_11"
  input: "D_interp/D/MirrorPad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "D_G_z/D/MirrorPad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_1_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_G_z/D/strided_slice_1_grad/Shape"
  input: "D_G_z/D/strided_slice_1/stack"
  input: "D_G_z/D/strided_slice_1/stack_1"
  input: "gradients_2/D_G_z/D/strided_slice_1_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "D_x/D/MirrorPad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_1_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients_2/D_x/D/strided_slice_1_grad/Shape"
  input: "D_x/D/strided_slice_1/stack"
  input: "D_x/D/strided_slice_1/stack_1"
  input: "gradients_2/D_x/D/strided_slice_1_grad/StridedSliceGrad/strides"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/strided_slice_3_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_2/gradients/D_interp/D/MirrorPad_2_grad/MirrorPadGrad_grad/MirrorPad"
  input: "D_interp/D/strided_slice_3/stack"
  input: "D_interp/D/strided_slice_3/stack_1"
  input: "gradients/D_interp/D/strided_slice_3_grad/StridedSliceGrad/strides"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/MirrorPad_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_G_z/D/strided_slice_1_grad/StridedSliceGrad"
  input: "D_G_z/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/D_x/D/MirrorPad_grad/MirrorPadGrad"
  op: "MirrorPadGrad"
  input: "gradients_2/D_x/D/strided_slice_1_grad/StridedSliceGrad"
  input: "D_x/D/MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/strided_slice_3_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_G_z/D/Maximum_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_G_z/D/Maximum_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_G_z/D/mul"
  input: "D_G_z/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_G_z/D/Maximum_grad/Shape"
  input: "gradients_2/D_G_z/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/MirrorPad_grad/MirrorPadGrad"
  input: "gradients_2/D_G_z/D/Maximum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_grad/SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_grad/Sum"
  input: "gradients_2/D_G_z/D/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_G_z/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/D_G_z/D/Maximum_grad/zeros_like"
  input: "gradients_2/D_G_z/D/MirrorPad_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_G_z/D/Maximum_grad/SelectV2_1"
  input: "gradients_2/D_G_z/D/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/Maximum_grad/Sum_1"
  input: "gradients_2/D_G_z/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/Maximum_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_grad/Reshape"
  input: "^gradients_2/D_G_z/D/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/Maximum_grad/Reshape_1"
  input: "^gradients_2/D_G_z/D/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/zeros_like"
  op: "Fill"
  input: "gradients_2/D_x/D/Maximum_grad/zeros_like/shape_as_tensor"
  input: "gradients_2/D_x/D/Maximum_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "D_x/D/mul"
  input: "D_x/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/D_x/D/Maximum_grad/Shape"
  input: "gradients_2/D_x/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/SelectV2"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/D_x/D/MirrorPad_grad/MirrorPadGrad"
  input: "gradients_2/D_x/D/Maximum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_grad/SelectV2"
  input: "gradients_2/D_x/D/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_grad/Sum"
  input: "gradients_2/D_x/D/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients_2/D_x/D/Maximum_grad/GreaterEqual"
  input: "gradients_2/D_x/D/Maximum_grad/zeros_like"
  input: "gradients_2/D_x/D/MirrorPad_grad/MirrorPadGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/D_x/D/Maximum_grad/SelectV2_1"
  input: "gradients_2/D_x/D/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/D_x/D/Maximum_grad/Sum_1"
  input: "gradients_2/D_x/D/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/Maximum_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_grad/Reshape_1"
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_grad/Reshape"
  input: "^gradients_2/D_x/D/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/Maximum_grad/Reshape_1"
  input: "^gradients_2/D_x/D/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  input: "gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_G_z/D/Maximum_grad/tuple/control_dependency"
  input: "D_G_z/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_G_z/D/mul_grad/Mul"
  input: "gradients_2/D_G_z/D/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/mul_grad/Sum"
  input: "gradients_2/D_G_z/D/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/Mul_1"
  op: "Mul"
  input: "D_G_z/D/mul/x"
  input: "gradients_2/D_G_z/D/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/mul_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_grad/Reshape"
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_grad/Reshape"
  input: "^gradients_2/D_G_z/D/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/mul_grad/Mul_1"
  input: "^gradients_2/D_G_z/D/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/Mul"
  op: "Mul"
  input: "gradients_2/D_x/D/Maximum_grad/tuple/control_dependency"
  input: "D_x/D/downconv_0/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/Sum"
  op: "Sum"
  input: "gradients_2/D_x/D/mul_grad/Mul"
  input: "gradients_2/D_x/D/mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/mul_grad/Sum"
  input: "gradients_2/D_x/D/mul_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/Mul_1"
  op: "Mul"
  input: "D_x/D/mul/x"
  input: "gradients_2/D_x/D/Maximum_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/mul_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_grad/Reshape"
}
node {
  name: "gradients_2/D_x/D/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_grad/Reshape"
  input: "^gradients_2/D_x/D/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/mul_grad/Mul_1"
  input: "^gradients_2/D_x/D/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_12"
  op: "AddN"
  input: "gradients_2/D_G_z/D/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_12"
  input: "^gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_12"
  input: "^gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_13"
  op: "AddN"
  input: "gradients_2/D_x/D/Maximum_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/AddN_13"
  input: "^gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/AddN_13"
  input: "^gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_2/gradients/AddN_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 4096
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/AddN_1_grad/tuple/control_dependency"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/gradients/AddN_1_grad/tuple/control_dependency_1"
  input: "gradients/D_interp/D/Maximum_9_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Mul"
  input: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_3/x"
  input: "gradients_2/gradients/AddN_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Reshape"
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  op: "ShapeN"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/ShapeN"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "D_x/D/downconv_0/conv1d/Conv1D/ExpandDims"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/ShapeN:1"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
  input: "^gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_9_grad/BroadcastGradientArgs:1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_3_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_1_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_9_grad/BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_9_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/Sum_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_14"
  op: "AddN"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_9_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/MirrorPad_3_grad/MirrorPadGrad_grad/MirrorPad"
  op: "MirrorPad"
  input: "gradients_2/AddN_14"
  input: "D_interp/D/MirrorPad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/strided_slice_4_grad/StridedSliceGrad_grad/StridedSlice"
  op: "StridedSlice"
  input: "gradients_2/gradients/D_interp/D/MirrorPad_3_grad/MirrorPadGrad_grad/MirrorPad"
  input: "D_interp/D/strided_slice_4/stack"
  input: "D_interp/D/strided_slice_4/stack_1"
  input: "gradients/D_interp/D/strided_slice_4_grad/StridedSliceGrad/strides"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/strided_slice_4_grad/StridedSliceGrad_grad/StridedSlice"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Shape"
  input: "gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  op: "Conv2D"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_grad/Reshape_grad/Reshape"
  input: "D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
  input: "^gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
  input: "^gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
}
node {
  name: "gradients_2/gradients/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
  input: "^gradients_2/gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D/Squeeze_grad/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/AddN_grad/tuple/control_dependency"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients_2/gradients/AddN_grad/tuple/control_dependency_1"
  input: "gradients/D_interp/D/Maximum_12_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Mul"
  input: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "D_interp/D/mul_4/x"
  input: "gradients_2/gradients/AddN_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Reshape"
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Mul_1"
  input: "^gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_12_grad/BroadcastGradientArgs:1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/mul_4_grad/Mul_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_1_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/add"
  op: "AddV2"
  input: "gradients/D_interp/D/Maximum_12_grad/BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/add"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape_1"
  op: "Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/range"
  op: "Range"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/range/start"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Size"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/ones"
  op: "Fill"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/range"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/mod"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/ones"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Reshape_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/BroadcastTo"
  op: "BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/BroadcastTo"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Sum"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/SelectV2"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/D_interp/D/Maximum_12_grad/GreaterEqual"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/zeros"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/Sum_grad/BroadcastTo"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\200\000\000\000\020\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape_2"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/SelectV2_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Sum_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape_1"
  input: "^gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_15"
  op: "AddN"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/Maximum_12_grad/SelectV2_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Reshape_grad/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000@\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/Reshape_grad/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/AddN_15"
  input: "gradients_2/gradients/D_interp/D/Reshape_grad/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 16384
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/gradients/D_interp/D/Reshape_grad/Reshape_grad/Reshape"
  input: "D_interp/D/output/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_2/gradients/D_interp/D/Reshape_grad/Reshape_grad/Reshape"
  input: "gradients/D_interp/D/output/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul"
  input: "^gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul_1"
  input: "^gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_16"
  op: "AddN"
  input: "gradients_2/D_G_z/D/output/dense/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/output/dense/MatMul_grad/tuple/control_dependency_1"
  input: "gradients_2/gradients/D_interp/D/output/dense/MatMul_grad/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/output/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_17"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_4/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_4/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_4/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients_2/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_18"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_x/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_interp/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_4/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_19"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_3/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_3/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_3/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients_2/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_20"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_x/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_interp/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_3/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_21"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_2/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_2/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_2/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients_2/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_22"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_x/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_interp/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_2/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_23"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_1/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_1/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_1/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients_2/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_24"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_x/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_interp/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_1/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_25"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients_2/D_x/D/downconv_0/conv1d/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_0/conv1d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/gradients/D_interp/D/downconv_0/conv1d/Conv1D_grad/Conv2DBackpropInput_grad/tuple/control_dependency"
  input: "gradients_2/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_26"
  op: "AddN"
  input: "gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_x/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  input: "gradients_2/D_interp/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/D_G_z/D/downconv_0/conv1d/Conv1D/ExpandDims_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "beta1_power_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power_1"
    }
  }
}
node {
  name: "beta1_power_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power_1/Assign"
  op: "AssignVariableOp"
  input: "beta1_power_1"
  input: "beta1_power_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "beta1_power_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta2_power_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power_1"
    }
  }
}
node {
  name: "beta2_power_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power_1/Assign"
  op: "AssignVariableOp"
  input: "beta2_power_1"
  input: "beta2_power_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "beta2_power_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_0/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_0/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_0/conv1d/kernel/Adam"
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam"
  input: "D/downconv_0/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_0/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_0/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_0/conv1d/kernel/Adam_1"
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam_1"
  input: "D/downconv_0/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_0/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_0/conv1d/bias/Adam"
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam"
  input: "D/downconv_0/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_0/conv1d/bias/Adam_1"
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam_1"
  input: "D/downconv_0/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_0/conv1d/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_1/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_1/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_1/conv1d/kernel/Adam"
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam"
  input: "D/downconv_1/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_1/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_1/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_1/conv1d/kernel/Adam_1"
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam_1"
  input: "D/downconv_1/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_1/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_1/conv1d/bias/Adam"
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam"
  input: "D/downconv_1/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_1/conv1d/bias/Adam_1"
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam_1"
  input: "D/downconv_1/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_1/conv1d/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_2/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_2/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_2/conv1d/kernel/Adam"
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam"
  input: "D/downconv_2/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_2/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_2/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_2/conv1d/kernel/Adam_1"
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam_1"
  input: "D/downconv_2/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_2/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_2/conv1d/bias/Adam"
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam"
  input: "D/downconv_2/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_2/conv1d/bias/Adam_1"
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam_1"
  input: "D/downconv_2/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_2/conv1d/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_3/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_3/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_3/conv1d/kernel/Adam"
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam"
  input: "D/downconv_3/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_3/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_3/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_3/conv1d/kernel/Adam_1"
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam_1"
  input: "D/downconv_3/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_3/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_3/conv1d/bias/Adam"
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam"
  input: "D/downconv_3/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_3/conv1d/bias/Adam_1"
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam_1"
  input: "D/downconv_3/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_3/conv1d/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_4/conv1d/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_4/conv1d/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_4/conv1d/kernel/Adam"
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam"
  input: "D/downconv_4/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\031\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_4/conv1d/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_4/conv1d/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 25
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_4/conv1d/kernel/Adam_1"
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam_1"
  input: "D/downconv_4/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_4/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_4/conv1d/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_4/conv1d/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_4/conv1d/bias/Adam"
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam"
  input: "D/downconv_4/conv1d/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "D/downconv_4/conv1d/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "D/downconv_4/conv1d/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/downconv_4/conv1d/bias/Adam_1"
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam_1"
  input: "D/downconv_4/conv1d/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/downconv_4/conv1d/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "D/output/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "D/output/dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/output/dense/kernel/Adam"
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/output/dense/kernel/Adam"
  input: "D/output/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000@\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "D/output/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "D/output/dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/output/dense/kernel/Adam_1"
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/output/dense/kernel/Adam_1"
  input: "D/output/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/output/dense/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/output/dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/output/dense/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/output/dense/bias/Adam"
    }
  }
}
node {
  name: "D/output/dense/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/output/dense/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "D/output/dense/bias/Adam"
  input: "D/output/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/output/dense/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "D/output/dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "D/output/dense/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "D/output/dense/bias/Adam_1"
    }
  }
}
node {
  name: "D/output/dense/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "D/output/dense/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "D/output/dense/bias/Adam_1"
  input: "D/output/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "D/output/dense/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "D/output/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam_1/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Adam_1/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_1/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_0/conv1d/kernel"
  input: "D/downconv_0/conv1d/kernel/Adam"
  input: "D/downconv_0/conv1d/kernel/Adam_1"
  input: "Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_0/conv1d/bias"
  input: "D/downconv_0/conv1d/bias/Adam"
  input: "D/downconv_0/conv1d/bias/Adam_1"
  input: "Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_1/conv1d/kernel"
  input: "D/downconv_1/conv1d/kernel/Adam"
  input: "D/downconv_1/conv1d/kernel/Adam_1"
  input: "Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_1/conv1d/bias"
  input: "D/downconv_1/conv1d/bias/Adam"
  input: "D/downconv_1/conv1d/bias/Adam_1"
  input: "Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_1/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_2/conv1d/kernel"
  input: "D/downconv_2/conv1d/kernel/Adam"
  input: "D/downconv_2/conv1d/kernel/Adam_1"
  input: "Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_2/conv1d/bias"
  input: "D/downconv_2/conv1d/bias/Adam"
  input: "D/downconv_2/conv1d/bias/Adam_1"
  input: "Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_2/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_3/conv1d/kernel"
  input: "D/downconv_3/conv1d/kernel/Adam"
  input: "D/downconv_3/conv1d/kernel/Adam_1"
  input: "Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_3/conv1d/bias"
  input: "D/downconv_3/conv1d/bias/Adam"
  input: "D/downconv_3/conv1d/bias/Adam_1"
  input: "Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_3/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_4/conv1d/kernel"
  input: "D/downconv_4/conv1d/kernel/Adam"
  input: "D/downconv_4/conv1d/kernel/Adam_1"
  input: "Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/downconv_4/conv1d/bias"
  input: "D/downconv_4/conv1d/bias/Adam"
  input: "D/downconv_4/conv1d/bias/Adam_1"
  input: "Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_4/conv1d/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/output/dense/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/output/dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/output/dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/output/dense/kernel"
  input: "D/output/dense/kernel/Adam"
  input: "D/output/dense/kernel/Adam_1"
  input: "Adam_1/update_D/output/dense/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/output/dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_D/output/dense/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/output/dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/update_D/output/dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "D/output/dense/bias"
  input: "D/output/dense/bias/Adam"
  input: "D/output/dense/bias/Adam_1"
  input: "Adam_1/update_D/output/dense/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam_1/update_D/output/dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "gradients_2/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/output/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  input: "^Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/mul"
  op: "Mul"
  input: "Adam_1/ReadVariableOp"
  input: "Adam_1/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power_1"
  input: "Adam_1/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power_1"
  input: "^Adam_1/AssignVariableOp"
  input: "^Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  input: "^Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1/mul_1"
  op: "Mul"
  input: "Adam_1/ReadVariableOp_2"
  input: "Adam_1/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power_1"
  input: "Adam_1/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power_1"
  input: "^Adam_1/AssignVariableOp_1"
  input: "^Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@D/downconv_0/conv1d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam_1"
  op: "NoOp"
  input: "^Adam_1/AssignVariableOp"
  input: "^Adam_1/AssignVariableOp_1"
  input: "^Adam_1/update_D/downconv_0/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_0/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_1/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_2/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_3/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/downconv_4/conv1d/kernel/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/bias/ResourceApplyAdam"
  input: "^Adam_1/update_D/output/dense/kernel/ResourceApplyAdam"
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond"
  op: "If"
  input: "global_step/VarIsInitializedOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "global_step_cond_false_3260"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "global_step_cond_true_3259"
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Identity"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^D/downconv_0/conv1d/bias/Adam/Assign"
  input: "^D/downconv_0/conv1d/bias/Adam_1/Assign"
  input: "^D/downconv_0/conv1d/bias/Assign"
  input: "^D/downconv_0/conv1d/kernel/Adam/Assign"
  input: "^D/downconv_0/conv1d/kernel/Adam_1/Assign"
  input: "^D/downconv_0/conv1d/kernel/Assign"
  input: "^D/downconv_1/conv1d/bias/Adam/Assign"
  input: "^D/downconv_1/conv1d/bias/Adam_1/Assign"
  input: "^D/downconv_1/conv1d/bias/Assign"
  input: "^D/downconv_1/conv1d/kernel/Adam/Assign"
  input: "^D/downconv_1/conv1d/kernel/Adam_1/Assign"
  input: "^D/downconv_1/conv1d/kernel/Assign"
  input: "^D/downconv_2/conv1d/bias/Adam/Assign"
  input: "^D/downconv_2/conv1d/bias/Adam_1/Assign"
  input: "^D/downconv_2/conv1d/bias/Assign"
  input: "^D/downconv_2/conv1d/kernel/Adam/Assign"
  input: "^D/downconv_2/conv1d/kernel/Adam_1/Assign"
  input: "^D/downconv_2/conv1d/kernel/Assign"
  input: "^D/downconv_3/conv1d/bias/Adam/Assign"
  input: "^D/downconv_3/conv1d/bias/Adam_1/Assign"
  input: "^D/downconv_3/conv1d/bias/Assign"
  input: "^D/downconv_3/conv1d/kernel/Adam/Assign"
  input: "^D/downconv_3/conv1d/kernel/Adam_1/Assign"
  input: "^D/downconv_3/conv1d/kernel/Assign"
  input: "^D/downconv_4/conv1d/bias/Adam/Assign"
  input: "^D/downconv_4/conv1d/bias/Adam_1/Assign"
  input: "^D/downconv_4/conv1d/bias/Assign"
  input: "^D/downconv_4/conv1d/kernel/Adam/Assign"
  input: "^D/downconv_4/conv1d/kernel/Adam_1/Assign"
  input: "^D/downconv_4/conv1d/kernel/Assign"
  input: "^D/output/dense/bias/Adam/Assign"
  input: "^D/output/dense/bias/Adam_1/Assign"
  input: "^D/output/dense/bias/Assign"
  input: "^D/output/dense/kernel/Adam/Assign"
  input: "^D/output/dense/kernel/Adam_1/Assign"
  input: "^D/output/dense/kernel/Assign"
  input: "^G/upconv_0/conv2d_transpose/bias/Adam/Assign"
  input: "^G/upconv_0/conv2d_transpose/bias/Adam_1/Assign"
  input: "^G/upconv_0/conv2d_transpose/bias/Assign"
  input: "^G/upconv_0/conv2d_transpose/kernel/Adam/Assign"
  input: "^G/upconv_0/conv2d_transpose/kernel/Adam_1/Assign"
  input: "^G/upconv_0/conv2d_transpose/kernel/Assign"
  input: "^G/upconv_1/conv2d_transpose/bias/Adam/Assign"
  input: "^G/upconv_1/conv2d_transpose/bias/Adam_1/Assign"
  input: "^G/upconv_1/conv2d_transpose/bias/Assign"
  input: "^G/upconv_1/conv2d_transpose/kernel/Adam/Assign"
  input: "^G/upconv_1/conv2d_transpose/kernel/Adam_1/Assign"
  input: "^G/upconv_1/conv2d_transpose/kernel/Assign"
  input: "^G/upconv_2/conv2d_transpose/bias/Adam/Assign"
  input: "^G/upconv_2/conv2d_transpose/bias/Adam_1/Assign"
  input: "^G/upconv_2/conv2d_transpose/bias/Assign"
  input: "^G/upconv_2/conv2d_transpose/kernel/Adam/Assign"
  input: "^G/upconv_2/conv2d_transpose/kernel/Adam_1/Assign"
  input: "^G/upconv_2/conv2d_transpose/kernel/Assign"
  input: "^G/upconv_3/conv2d_transpose/bias/Adam/Assign"
  input: "^G/upconv_3/conv2d_transpose/bias/Adam_1/Assign"
  input: "^G/upconv_3/conv2d_transpose/bias/Assign"
  input: "^G/upconv_3/conv2d_transpose/kernel/Adam/Assign"
  input: "^G/upconv_3/conv2d_transpose/kernel/Adam_1/Assign"
  input: "^G/upconv_3/conv2d_transpose/kernel/Assign"
  input: "^G/upconv_4/conv2d_transpose/bias/Adam/Assign"
  input: "^G/upconv_4/conv2d_transpose/bias/Adam_1/Assign"
  input: "^G/upconv_4/conv2d_transpose/bias/Assign"
  input: "^G/upconv_4/conv2d_transpose/kernel/Adam/Assign"
  input: "^G/upconv_4/conv2d_transpose/kernel/Adam_1/Assign"
  input: "^G/upconv_4/conv2d_transpose/kernel/Assign"
  input: "^G/z_project/dense/bias/Adam/Assign"
  input: "^G/z_project/dense/bias/Adam_1/Assign"
  input: "^G/z_project/dense/bias/Assign"
  input: "^G/z_project/dense/kernel/Adam/Assign"
  input: "^G/z_project/dense/kernel/Adam_1/Assign"
  input: "^G/z_project/dense/kernel/Assign"
  input: "^beta1_power/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta2_power/Assign"
  input: "^beta2_power_1/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/VarIsInitializedOp_44"
  input: "report_uninitialized_variables/VarIsInitializedOp_45"
  input: "report_uninitialized_variables/VarIsInitializedOp_46"
  input: "report_uninitialized_variables/VarIsInitializedOp_47"
  input: "report_uninitialized_variables/VarIsInitializedOp_48"
  input: "report_uninitialized_variables/VarIsInitializedOp_49"
  input: "report_uninitialized_variables/VarIsInitializedOp_50"
  input: "report_uninitialized_variables/VarIsInitializedOp_51"
  input: "report_uninitialized_variables/VarIsInitializedOp_52"
  input: "report_uninitialized_variables/VarIsInitializedOp_53"
  input: "report_uninitialized_variables/VarIsInitializedOp_54"
  input: "report_uninitialized_variables/VarIsInitializedOp_55"
  input: "report_uninitialized_variables/VarIsInitializedOp_56"
  input: "report_uninitialized_variables/VarIsInitializedOp_57"
  input: "report_uninitialized_variables/VarIsInitializedOp_58"
  input: "report_uninitialized_variables/VarIsInitializedOp_59"
  input: "report_uninitialized_variables/VarIsInitializedOp_60"
  input: "report_uninitialized_variables/VarIsInitializedOp_61"
  input: "report_uninitialized_variables/VarIsInitializedOp_62"
  input: "report_uninitialized_variables/VarIsInitializedOp_63"
  input: "report_uninitialized_variables/VarIsInitializedOp_64"
  input: "report_uninitialized_variables/VarIsInitializedOp_65"
  input: "report_uninitialized_variables/VarIsInitializedOp_66"
  input: "report_uninitialized_variables/VarIsInitializedOp_67"
  input: "report_uninitialized_variables/VarIsInitializedOp_68"
  input: "report_uninitialized_variables/VarIsInitializedOp_69"
  input: "report_uninitialized_variables/VarIsInitializedOp_70"
  input: "report_uninitialized_variables/VarIsInitializedOp_71"
  input: "report_uninitialized_variables/VarIsInitializedOp_72"
  input: "report_uninitialized_variables/VarIsInitializedOp_73"
  input: "report_uninitialized_variables/VarIsInitializedOp_74"
  input: "report_uninitialized_variables/VarIsInitializedOp_75"
  input: "report_uninitialized_variables/VarIsInitializedOp_76"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 77
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 77
          }
        }
        string_val: "G/z_project/dense/kernel"
        string_val: "G/z_project/dense/bias"
        string_val: "G/upconv_0/conv2d_transpose/kernel"
        string_val: "G/upconv_0/conv2d_transpose/bias"
        string_val: "G/upconv_1/conv2d_transpose/kernel"
        string_val: "G/upconv_1/conv2d_transpose/bias"
        string_val: "G/upconv_2/conv2d_transpose/kernel"
        string_val: "G/upconv_2/conv2d_transpose/bias"
        string_val: "G/upconv_3/conv2d_transpose/kernel"
        string_val: "G/upconv_3/conv2d_transpose/bias"
        string_val: "G/upconv_4/conv2d_transpose/kernel"
        string_val: "G/upconv_4/conv2d_transpose/bias"
        string_val: "D/downconv_0/conv1d/kernel"
        string_val: "D/downconv_0/conv1d/bias"
        string_val: "D/downconv_1/conv1d/kernel"
        string_val: "D/downconv_1/conv1d/bias"
        string_val: "D/downconv_2/conv1d/kernel"
        string_val: "D/downconv_2/conv1d/bias"
        string_val: "D/downconv_3/conv1d/kernel"
        string_val: "D/downconv_3/conv1d/bias"
        string_val: "D/downconv_4/conv1d/kernel"
        string_val: "D/downconv_4/conv1d/bias"
        string_val: "D/output/dense/kernel"
        string_val: "D/output/dense/bias"
        string_val: "global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "G/z_project/dense/kernel/Adam"
        string_val: "G/z_project/dense/kernel/Adam_1"
        string_val: "G/z_project/dense/bias/Adam"
        string_val: "G/z_project/dense/bias/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam_1"
        string_val: "beta1_power_1"
        string_val: "beta2_power_1"
        string_val: "D/downconv_0/conv1d/kernel/Adam"
        string_val: "D/downconv_0/conv1d/kernel/Adam_1"
        string_val: "D/downconv_0/conv1d/bias/Adam"
        string_val: "D/downconv_0/conv1d/bias/Adam_1"
        string_val: "D/downconv_1/conv1d/kernel/Adam"
        string_val: "D/downconv_1/conv1d/kernel/Adam_1"
        string_val: "D/downconv_1/conv1d/bias/Adam"
        string_val: "D/downconv_1/conv1d/bias/Adam_1"
        string_val: "D/downconv_2/conv1d/kernel/Adam"
        string_val: "D/downconv_2/conv1d/kernel/Adam_1"
        string_val: "D/downconv_2/conv1d/bias/Adam"
        string_val: "D/downconv_2/conv1d/bias/Adam_1"
        string_val: "D/downconv_3/conv1d/kernel/Adam"
        string_val: "D/downconv_3/conv1d/kernel/Adam_1"
        string_val: "D/downconv_3/conv1d/bias/Adam"
        string_val: "D/downconv_3/conv1d/bias/Adam_1"
        string_val: "D/downconv_4/conv1d/kernel/Adam"
        string_val: "D/downconv_4/conv1d/kernel/Adam_1"
        string_val: "D/downconv_4/conv1d/bias/Adam"
        string_val: "D/downconv_4/conv1d/bias/Adam_1"
        string_val: "D/output/dense/kernel/Adam"
        string_val: "D/output/dense/kernel/Adam_1"
        string_val: "D/output/dense/bias/Adam"
        string_val: "D/output/dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 77
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 77
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 77
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "G/z_project/dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "beta1_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "beta2_power_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "D/downconv_0/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "D/downconv_1/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "D/downconv_2/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "D/downconv_3/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "D/downconv_4/conv1d/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "D/output/dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "D/output/dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_44"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_45"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_46"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_47"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_48"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_49"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_50"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_51"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_52"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_53"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_54"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_55"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_56"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_57"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_58"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_59"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_60"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_61"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_62"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_63"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_64"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_65"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_66"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_67"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_68"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_69"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_70"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_71"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_72"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_73"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_74"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_75"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_76"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 77
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 77
          }
        }
        string_val: "G/z_project/dense/kernel"
        string_val: "G/z_project/dense/bias"
        string_val: "G/upconv_0/conv2d_transpose/kernel"
        string_val: "G/upconv_0/conv2d_transpose/bias"
        string_val: "G/upconv_1/conv2d_transpose/kernel"
        string_val: "G/upconv_1/conv2d_transpose/bias"
        string_val: "G/upconv_2/conv2d_transpose/kernel"
        string_val: "G/upconv_2/conv2d_transpose/bias"
        string_val: "G/upconv_3/conv2d_transpose/kernel"
        string_val: "G/upconv_3/conv2d_transpose/bias"
        string_val: "G/upconv_4/conv2d_transpose/kernel"
        string_val: "G/upconv_4/conv2d_transpose/bias"
        string_val: "D/downconv_0/conv1d/kernel"
        string_val: "D/downconv_0/conv1d/bias"
        string_val: "D/downconv_1/conv1d/kernel"
        string_val: "D/downconv_1/conv1d/bias"
        string_val: "D/downconv_2/conv1d/kernel"
        string_val: "D/downconv_2/conv1d/bias"
        string_val: "D/downconv_3/conv1d/kernel"
        string_val: "D/downconv_3/conv1d/bias"
        string_val: "D/downconv_4/conv1d/kernel"
        string_val: "D/downconv_4/conv1d/bias"
        string_val: "D/output/dense/kernel"
        string_val: "D/output/dense/bias"
        string_val: "global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "G/z_project/dense/kernel/Adam"
        string_val: "G/z_project/dense/kernel/Adam_1"
        string_val: "G/z_project/dense/bias/Adam"
        string_val: "G/z_project/dense/bias/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam_1"
        string_val: "beta1_power_1"
        string_val: "beta2_power_1"
        string_val: "D/downconv_0/conv1d/kernel/Adam"
        string_val: "D/downconv_0/conv1d/kernel/Adam_1"
        string_val: "D/downconv_0/conv1d/bias/Adam"
        string_val: "D/downconv_0/conv1d/bias/Adam_1"
        string_val: "D/downconv_1/conv1d/kernel/Adam"
        string_val: "D/downconv_1/conv1d/kernel/Adam_1"
        string_val: "D/downconv_1/conv1d/bias/Adam"
        string_val: "D/downconv_1/conv1d/bias/Adam_1"
        string_val: "D/downconv_2/conv1d/kernel/Adam"
        string_val: "D/downconv_2/conv1d/kernel/Adam_1"
        string_val: "D/downconv_2/conv1d/bias/Adam"
        string_val: "D/downconv_2/conv1d/bias/Adam_1"
        string_val: "D/downconv_3/conv1d/kernel/Adam"
        string_val: "D/downconv_3/conv1d/kernel/Adam_1"
        string_val: "D/downconv_3/conv1d/bias/Adam"
        string_val: "D/downconv_3/conv1d/bias/Adam_1"
        string_val: "D/downconv_4/conv1d/kernel/Adam"
        string_val: "D/downconv_4/conv1d/kernel/Adam_1"
        string_val: "D/downconv_4/conv1d/bias/Adam"
        string_val: "D/downconv_4/conv1d/bias/Adam_1"
        string_val: "D/output/dense/kernel/Adam"
        string_val: "D/output/dense/kernel/Adam_1"
        string_val: "D/output/dense/bias/Adam"
        string_val: "D/output/dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 77
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 77
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 77
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "x"
  input: "G_z"
  input: "x_rms_batch"
  input: "G_z_rms_batch"
  input: "x_rms"
  input: "G_z_rms"
  input: "G_loss"
  input: "D_loss"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StaticRegexFullMatch"
  op: "StaticRegexFullMatch"
  input: "save/Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "pattern"
    value {
      s: "^s3://.*"
    }
  }
}
node {
  name: "save/Const_1"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".part"
      }
    }
  }
}
node {
  name: "save/Const_2"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp/part"
      }
    }
  }
}
node {
  name: "save/Select"
  op: "Select"
  input: "save/StaticRegexFullMatch"
  input: "save/Const_1"
  input: "save/Const_2"
  device: "/device:CPU:*"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/Select"
  device: "/device:CPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 77
          }
        }
        string_val: "D/downconv_0/conv1d/bias"
        string_val: "D/downconv_0/conv1d/bias/Adam"
        string_val: "D/downconv_0/conv1d/bias/Adam_1"
        string_val: "D/downconv_0/conv1d/kernel"
        string_val: "D/downconv_0/conv1d/kernel/Adam"
        string_val: "D/downconv_0/conv1d/kernel/Adam_1"
        string_val: "D/downconv_1/conv1d/bias"
        string_val: "D/downconv_1/conv1d/bias/Adam"
        string_val: "D/downconv_1/conv1d/bias/Adam_1"
        string_val: "D/downconv_1/conv1d/kernel"
        string_val: "D/downconv_1/conv1d/kernel/Adam"
        string_val: "D/downconv_1/conv1d/kernel/Adam_1"
        string_val: "D/downconv_2/conv1d/bias"
        string_val: "D/downconv_2/conv1d/bias/Adam"
        string_val: "D/downconv_2/conv1d/bias/Adam_1"
        string_val: "D/downconv_2/conv1d/kernel"
        string_val: "D/downconv_2/conv1d/kernel/Adam"
        string_val: "D/downconv_2/conv1d/kernel/Adam_1"
        string_val: "D/downconv_3/conv1d/bias"
        string_val: "D/downconv_3/conv1d/bias/Adam"
        string_val: "D/downconv_3/conv1d/bias/Adam_1"
        string_val: "D/downconv_3/conv1d/kernel"
        string_val: "D/downconv_3/conv1d/kernel/Adam"
        string_val: "D/downconv_3/conv1d/kernel/Adam_1"
        string_val: "D/downconv_4/conv1d/bias"
        string_val: "D/downconv_4/conv1d/bias/Adam"
        string_val: "D/downconv_4/conv1d/bias/Adam_1"
        string_val: "D/downconv_4/conv1d/kernel"
        string_val: "D/downconv_4/conv1d/kernel/Adam"
        string_val: "D/downconv_4/conv1d/kernel/Adam_1"
        string_val: "D/output/dense/bias"
        string_val: "D/output/dense/bias/Adam"
        string_val: "D/output/dense/bias/Adam_1"
        string_val: "D/output/dense/kernel"
        string_val: "D/output/dense/kernel/Adam"
        string_val: "D/output/dense/kernel/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/bias"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/kernel"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/bias"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/kernel"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/bias"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/kernel"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/bias"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/kernel"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/bias"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/kernel"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
        string_val: "G/z_project/dense/bias"
        string_val: "G/z_project/dense/bias/Adam"
        string_val: "G/z_project/dense/bias/Adam_1"
        string_val: "G/z_project/dense/kernel"
        string_val: "G/z_project/dense/kernel/Adam"
        string_val: "G/z_project/dense/kernel/Adam_1"
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 77
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "D/downconv_0/conv1d/bias/Read/ReadVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam/Read/ReadVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel/Read/ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam/Read/ReadVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_1/conv1d/bias/Read/ReadVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam/Read/ReadVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel/Read/ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam/Read/ReadVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_2/conv1d/bias/Read/ReadVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam/Read/ReadVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel/Read/ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam/Read/ReadVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_3/conv1d/bias/Read/ReadVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam/Read/ReadVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel/Read/ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam/Read/ReadVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_4/conv1d/bias/Read/ReadVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam/Read/ReadVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam_1/Read/ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel/Read/ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam/Read/ReadVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam_1/Read/ReadVariableOp"
  input: "D/output/dense/bias/Read/ReadVariableOp"
  input: "D/output/dense/bias/Adam/Read/ReadVariableOp"
  input: "D/output/dense/bias/Adam_1/Read/ReadVariableOp"
  input: "D/output/dense/kernel/Read/ReadVariableOp"
  input: "D/output/dense/kernel/Adam/Read/ReadVariableOp"
  input: "D/output/dense/kernel/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Read/ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Read/ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Read/ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Read/ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Read/ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Read/ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Read/ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Read/ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Read/ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam/Read/ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1/Read/ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Read/ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam/Read/ReadVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1/Read/ReadVariableOp"
  input: "G/z_project/dense/bias/Read/ReadVariableOp"
  input: "G/z_project/dense/bias/Adam/Read/ReadVariableOp"
  input: "G/z_project/dense/bias/Adam_1/Read/ReadVariableOp"
  input: "G/z_project/dense/kernel/Read/ReadVariableOp"
  input: "G/z_project/dense/kernel/Adam/Read/ReadVariableOp"
  input: "G/z_project/dense/kernel/Adam_1/Read/ReadVariableOp"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta1_power_1/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "beta2_power_1/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 77
          }
        }
        string_val: "D/downconv_0/conv1d/bias"
        string_val: "D/downconv_0/conv1d/bias/Adam"
        string_val: "D/downconv_0/conv1d/bias/Adam_1"
        string_val: "D/downconv_0/conv1d/kernel"
        string_val: "D/downconv_0/conv1d/kernel/Adam"
        string_val: "D/downconv_0/conv1d/kernel/Adam_1"
        string_val: "D/downconv_1/conv1d/bias"
        string_val: "D/downconv_1/conv1d/bias/Adam"
        string_val: "D/downconv_1/conv1d/bias/Adam_1"
        string_val: "D/downconv_1/conv1d/kernel"
        string_val: "D/downconv_1/conv1d/kernel/Adam"
        string_val: "D/downconv_1/conv1d/kernel/Adam_1"
        string_val: "D/downconv_2/conv1d/bias"
        string_val: "D/downconv_2/conv1d/bias/Adam"
        string_val: "D/downconv_2/conv1d/bias/Adam_1"
        string_val: "D/downconv_2/conv1d/kernel"
        string_val: "D/downconv_2/conv1d/kernel/Adam"
        string_val: "D/downconv_2/conv1d/kernel/Adam_1"
        string_val: "D/downconv_3/conv1d/bias"
        string_val: "D/downconv_3/conv1d/bias/Adam"
        string_val: "D/downconv_3/conv1d/bias/Adam_1"
        string_val: "D/downconv_3/conv1d/kernel"
        string_val: "D/downconv_3/conv1d/kernel/Adam"
        string_val: "D/downconv_3/conv1d/kernel/Adam_1"
        string_val: "D/downconv_4/conv1d/bias"
        string_val: "D/downconv_4/conv1d/bias/Adam"
        string_val: "D/downconv_4/conv1d/bias/Adam_1"
        string_val: "D/downconv_4/conv1d/kernel"
        string_val: "D/downconv_4/conv1d/kernel/Adam"
        string_val: "D/downconv_4/conv1d/kernel/Adam_1"
        string_val: "D/output/dense/bias"
        string_val: "D/output/dense/bias/Adam"
        string_val: "D/output/dense/bias/Adam_1"
        string_val: "D/output/dense/kernel"
        string_val: "D/output/dense/kernel/Adam"
        string_val: "D/output/dense/kernel/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/bias"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_0/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_0/conv2d_transpose/kernel"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/bias"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_1/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_1/conv2d_transpose/kernel"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/bias"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_2/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_2/conv2d_transpose/kernel"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/bias"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_3/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_3/conv2d_transpose/kernel"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/bias"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam"
        string_val: "G/upconv_4/conv2d_transpose/bias/Adam_1"
        string_val: "G/upconv_4/conv2d_transpose/kernel"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam"
        string_val: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
        string_val: "G/z_project/dense/bias"
        string_val: "G/z_project/dense/bias/Adam"
        string_val: "G/z_project/dense/bias/Adam_1"
        string_val: "G/z_project/dense/kernel"
        string_val: "G/z_project/dense/kernel/Adam"
        string_val: "G/z_project/dense/kernel/Adam_1"
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 77
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/bias"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/bias/Adam_1"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/kernel"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "D/downconv_0/conv1d/kernel/Adam_1"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/bias"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/bias/Adam_1"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/kernel"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "D/downconv_1/conv1d/kernel/Adam_1"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/bias"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/bias/Adam_1"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/kernel"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "D/downconv_2/conv1d/kernel/Adam_1"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/bias"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/bias/Adam_1"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/kernel"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "D/downconv_3/conv1d/kernel/Adam_1"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/bias"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/bias/Adam_1"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/kernel"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "D/downconv_4/conv1d/kernel/Adam_1"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "D/output/dense/bias"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "D/output/dense/bias/Adam"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "D/output/dense/bias/Adam_1"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "D/output/dense/kernel"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "D/output/dense/kernel/Adam"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "D/output/dense/kernel/Adam_1"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/bias/Adam_1"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "G/upconv_0/conv2d_transpose/kernel/Adam_1"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/bias/Adam_1"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "G/upconv_1/conv2d_transpose/kernel/Adam_1"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/bias/Adam_1"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "G/upconv_2/conv2d_transpose/kernel/Adam_1"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/bias/Adam_1"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "G/upconv_3/conv2d_transpose/kernel/Adam_1"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/bias/Adam_1"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "G/upconv_4/conv2d_transpose/kernel/Adam_1"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "G/z_project/dense/bias"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "G/z_project/dense/bias/Adam"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "G/z_project/dense/bias/Adam_1"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "G/z_project/dense/kernel"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "G/z_project/dense/kernel/Adam"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "G/z_project/dense/kernel/Adam_1"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "beta1_power_1"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "beta2_power_1"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "global_step_cond_false_3260"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "global_step_initializer_zeros_0"
        type: DT_INT64
      }
      output_arg {
        name: "global_step_initializer_zeros"
        type: DT_INT64
      }
    }
    ret {
      key: "global_step_initializer_zeros"
      value: "global_step_initializer_zeros_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference__finalize_func_440"
      input_arg {
        name: "string_handle"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
      control_output: "DestroyResourceOp"
      control_output: "IteratorFromStringHandleV2"
    }
    node_def {
      name: "IteratorFromStringHandleV2"
      op: "IteratorFromStringHandleV2"
      input: "string_handle"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "DestroyResourceOp"
      op: "DestroyResourceOp"
      input: "IteratorFromStringHandleV2:resource_handle:0"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "ignore_lookup_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      input: "^DestroyResourceOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Const:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^DestroyResourceOp"
      input: "^IteratorFromStringHandleV2"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "DestroyResourceOp"
      value: "DestroyResourceOp"
    }
    control_ret {
      key: "IteratorFromStringHandleV2"
      value: "IteratorFromStringHandleV2"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "string_handle"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map__decode_audio_shaped_306"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "PyFuncStateless"
      op: "PyFuncStateless"
      input: "args_0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_0"
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PyFuncStateless:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference__remote_init_func_421"
      input_arg {
        name: "remotecall_loader_const"
        type: DT_STRING
      }
      input_arg {
        name: "remotecall_loader_wrapdatasetvariant"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_STRING
      }
      is_stateful: true
      control_output: "RemoteCall"
    }
    node_def {
      name: "RemoteCall"
      op: "RemoteCall"
      input: "remotecall_loader_const"
      input: "remotecall_loader_wrapdatasetvariant"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_VARIANT
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference__init_func_415"
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "RemoteCall:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^RemoteCall"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "RemoteCall"
      value: "RemoteCall"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference__remote_finalize_func_446"
      input_arg {
        name: "string_handle"
        type: DT_STRING
      }
      input_arg {
        name: "remotecall_loader_const"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
      control_output: "RemoteCall"
    }
    node_def {
      name: "RemoteCall"
      op: "RemoteCall"
      input: "remotecall_loader_const"
      input: "string_handle"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference__finalize_func_440"
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "RemoteCall:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^RemoteCall"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    control_ret {
      key: "RemoteCall"
      value: "RemoteCall"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "string_handle"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference__next_func_428"
      input_arg {
        name: "string_handle"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "IteratorFromStringHandleV2"
      control_output: "IteratorGetNext"
      control_output: "IteratorToStringHandle"
    }
    node_def {
      name: "IteratorFromStringHandleV2"
      op: "IteratorFromStringHandleV2"
      input: "string_handle"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "IteratorToStringHandle"
      op: "IteratorToStringHandle"
      input: "IteratorFromStringHandleV2:resource_handle:0"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "IteratorGetNext"
      op: "IteratorGetNext"
      input: "IteratorFromStringHandleV2:resource_handle:0"
      input: "^IteratorToStringHandle"
      device: "/device:CPU:0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@IteratorFromStringHandleV2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "IteratorGetNext:components:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^IteratorFromStringHandleV2"
      input: "^IteratorGetNext"
      input: "^IteratorToStringHandle"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "IteratorFromStringHandleV2"
      value: "IteratorFromStringHandleV2"
    }
    control_ret {
      key: "IteratorGetNext"
      value: "IteratorGetNext"
    }
    control_ret {
      key: "IteratorToStringHandle"
      value: "IteratorToStringHandle"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "string_handle"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference__remote_next_func_434"
      input_arg {
        name: "string_handle"
        type: DT_STRING
      }
      input_arg {
        name: "remotecall_loader_const"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "RemoteCall"
    }
    node_def {
      name: "RemoteCall"
      op: "RemoteCall"
      input: "remotecall_loader_const"
      input: "string_handle"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference__next_func_428"
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "RemoteCall:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^RemoteCall"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    attr {
      key: "experimental_ints_on_device"
      value {
        b: true
      }
    }
    control_ret {
      key: "RemoteCall"
      value: "RemoteCall"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "string_handle"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map__slice_dataset_wrapper_396"
      input_arg {
        name: "args_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TensorSliceDataset"
    }
    node_def {
      name: "random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "random_uniform"
      op: "RandomUniformInt"
      input: "random_uniform/shape:output:0"
      input: "random_uniform/min:output:0"
      input: "random_uniform/max:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Pack"
      input: "random_uniform:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Pack"
      input: "Const:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Pack"
      input: "Const_1:output:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "args_0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/frame_length"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/frame_step"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/Shape"
      op: "Shape"
      input: "strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "frame/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/range"
      op: "Range"
      input: "frame/range/start:output:0"
      input: "frame/Rank:output:0"
      input: "frame/range/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/strided_slice"
      op: "StridedSlice"
      input: "frame/range:output:0"
      input: "frame/strided_slice/stack:output:0"
      input: "frame/strided_slice/stack_1:output:0"
      input: "frame/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "frame/sub/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/sub"
      op: "Sub"
      input: "frame/Rank:output:0"
      input: "frame/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/sub_1"
      op: "Sub"
      input: "frame/sub:z:0"
      input: "frame/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/packed/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/packed"
      op: "Pack"
      input: "frame/strided_slice:output:0"
      input: "frame/packed/1:output:0"
      input: "frame/sub_1:z:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/split"
      op: "SplitV"
      input: "frame/Shape:output:0"
      input: "frame/packed:output:0"
      input: "frame/split/split_dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tlen"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 3
        }
      }
    }
    node_def {
      name: "frame/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape/shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape"
      op: "Reshape"
      input: "frame/split:output:1"
      input: "frame/Reshape/shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/Size_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "frame/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/sub_2"
      op: "Sub"
      input: "frame/Reshape:output:0"
      input: "frame/frame_length:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/floordiv"
      op: "FloorDiv"
      input: "frame/sub_2:z:0"
      input: "frame/frame_step:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/add/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/add"
      op: "AddV2"
      input: "frame/add/x:output:0"
      input: "frame/floordiv:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Maximum"
      op: "Maximum"
      input: "frame/Const:output:0"
      input: "frame/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/gcd/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/floordiv_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/floordiv_1"
      op: "FloorDiv"
      input: "frame/frame_length:output:0"
      input: "frame/floordiv_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/floordiv_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/floordiv_2"
      op: "FloorDiv"
      input: "frame/frame_step:output:0"
      input: "frame/floordiv_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/floordiv_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/floordiv_3"
      op: "FloorDiv"
      input: "frame/Reshape:output:0"
      input: "frame/floordiv_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/mul"
      op: "Mul"
      input: "frame/floordiv_3:z:0"
      input: "frame/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "frame/concat/values_1"
      op: "Pack"
      input: "frame/mul:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat"
      op: "ConcatV2"
      input: "frame/split:output:0"
      input: "frame/concat/values_1:output:0"
      input: "frame/split:output:2"
      input: "frame/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/concat_1/values_1/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 16384
          }
        }
      }
    }
    node_def {
      name: "frame/concat_1/values_1"
      op: "Pack"
      input: "frame/floordiv_3:z:0"
      input: "frame/concat_1/values_1/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat_1"
      op: "ConcatV2"
      input: "frame/split:output:0"
      input: "frame/concat_1/values_1:output:0"
      input: "frame/split:output:2"
      input: "frame/concat_1/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/ones_like/Shape/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "frame/ones_like/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/ones_like"
      op: "Fill"
      input: "frame/ones_like/Shape/shape_as_tensor:output:0"
      input: "frame/ones_like/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "frame/StridedSlice"
      op: "StridedSlice"
      input: "strided_slice:output:0"
      input: "frame/zeros_like:output:0"
      input: "frame/concat:output:0"
      input: "frame/ones_like:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/Reshape_1"
      op: "Reshape"
      input: "frame/StridedSlice:output:0"
      input: "frame/concat_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 16384
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/range_1"
      op: "Range"
      input: "frame/range_1/start:output:0"
      input: "frame/Maximum:z:0"
      input: "frame/range_1/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/mul_1"
      op: "Mul"
      input: "frame/range_1:output:0"
      input: "frame/floordiv_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape_2/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape_2/shape"
      op: "Pack"
      input: "frame/Maximum:z:0"
      input: "frame/Reshape_2/shape/1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/Reshape_2"
      op: "Reshape"
      input: "frame/mul_1:z:0"
      input: "frame/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/range_2/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/range_2/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/range_2"
      op: "Range"
      input: "frame/range_2/start:output:0"
      input: "frame/floordiv_1:z:0"
      input: "frame/range_2/delta:output:0"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape_3/shape/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape_3/shape"
      op: "Pack"
      input: "frame/Reshape_3/shape/0:output:0"
      input: "frame/floordiv_1:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/Reshape_3"
      op: "Reshape"
      input: "frame/range_2:output:0"
      input: "frame/Reshape_3/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/add_1"
      op: "AddV2"
      input: "frame/Reshape_2:output:0"
      input: "frame/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/packed_1"
      op: "Pack"
      input: "frame/Maximum:z:0"
      input: "frame/frame_length:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/GatherV2"
      op: "GatherV2"
      input: "frame/Reshape_1:output:0"
      input: "frame/add_1:z:0"
      input: "frame/strided_slice:output:0"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 16384
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "batch_dims"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "frame/concat_2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "frame/concat_2"
      op: "ConcatV2"
      input: "frame/split:output:0"
      input: "frame/packed_1:output:0"
      input: "frame/split:output:2"
      input: "frame/concat_2/axis:output:0"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node_def {
      name: "frame/Reshape_4"
      op: "Reshape"
      input: "frame/GatherV2:output:0"
      input: "frame/concat_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "frame/Reshape_4:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "is_files"
        value {
          b: false
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "TensorSliceDataset:handle:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^TensorSliceDataset"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "TensorSliceDataset"
      value: "TensorSliceDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 1
                }
                dim {
                  size: 1
                }
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_true_3259"
      input_arg {
        name: "read_readvariableop_global_step"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_INT64
          shape {
          }
        }
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
    }
    node_def {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "read_readvariableop_global_step"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference__init_func_415"
      input_arg {
        name: "unwrapdatasetvariant_loader_wrapdatasetvariant"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_STRING
      }
      is_stateful: true
      control_output: "AnonymousIterator"
      control_output: "IteratorToStringHandle"
      control_output: "MakeIterator"
    }
    node_def {
      name: "UnwrapDatasetVariant"
      op: "UnwrapDatasetVariant"
      input: "unwrapdatasetvariant_loader_wrapdatasetvariant"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "AnonymousIterator"
      op: "AnonymousIterator"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "MakeIterator"
      op: "MakeIterator"
      input: "UnwrapDatasetVariant:output_handle:0"
      input: "AnonymousIterator:handle:0"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "IteratorToStringHandle"
      op: "IteratorToStringHandle"
      input: "AnonymousIterator:handle:0"
      input: "^MakeIterator"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "IteratorToStringHandle:string_handle:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^AnonymousIterator"
      input: "^IteratorToStringHandle"
      input: "^MakeIterator"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "AnonymousIterator"
      value: "AnonymousIterator"
    }
    control_ret {
      key: "IteratorToStringHandle"
      value: "IteratorToStringHandle"
    }
    control_ret {
      key: "MakeIterator"
      value: "MakeIterator"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "_make_dataset_gfxwy9dQEc8"
      output_arg {
        name: "loader_prefetchdataset_1"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "loader/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/cpu:0"
          }
        }
      }
    }
    node_def {
      name: "loader/normalize_element/component_0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1577
              }
            }
            string_val: "/content/drive/MyDrive/heartbeat artifact/00126.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00244.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00158.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00167.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00116.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00239.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00141.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00286.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00213.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00131.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00189.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00134.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00151.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00284.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00176.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00291.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00188.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00275.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00153.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00293.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00226.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00273.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00112.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00115.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00173.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00118.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00154.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00108.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00105.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00251.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00281.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00186.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00210.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00296.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00195.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00114.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00132.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00221.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00192.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00163.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00136.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00127.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00262.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00180.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00109.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00214.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00183.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00168.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00269.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00165.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00227.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00245.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00224.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00169.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00121.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00149.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00199.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00230.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00207.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00237.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0098.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00175.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00231.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00211.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00157.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00300.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00255.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00177.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00156.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00128.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00140.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00145.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00298.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00201.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00152.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0097.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00257.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00143.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00196.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00206.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00181.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00138.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00246.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00272.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00182.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00122.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00241.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00187.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00265.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00301.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00110.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00203.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00100.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00166.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00135.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00172.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00260.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00280.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00243.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00270.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00162.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00236.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00229.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00160.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00178.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00266.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00220.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00217.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00119.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00256.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00198.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00278.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00113.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00155.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00299.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00174.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00179.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00124.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00212.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00287.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00261.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00282.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00164.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00148.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00142.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00161.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0099.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00144.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00101.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00279.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00218.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00268.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00219.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00191.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00202.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00139.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00223.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00240.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00235.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00247.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00470.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00468.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00368.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00475.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00473.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00471.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00472.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00378.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00474.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00369.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00469.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00536.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00491.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00482.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00512.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00481.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00515.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00520.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00516.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00532.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00524.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00502.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00533.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00539.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00484.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00487.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00528.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00494.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00486.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00490.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00379.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00541.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00476.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00477.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00522.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00493.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00525.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00507.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00489.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00383.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00529.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00534.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00483.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00544.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00518.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00478.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00527.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00530.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00496.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00384.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00380.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00479.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00519.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00499.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00514.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00480.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00500.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00543.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00535.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00526.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00513.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00505.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00538.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00545.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00509.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00511.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00385.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00506.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00531.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00495.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00485.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00510.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00542.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00488.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00517.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00503.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00504.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00508.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00382.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00492.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00381.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00540.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00537.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00523.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00521.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00497.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00498.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00501.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00370.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00636.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00621.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00598.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00577.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00586.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00555.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00606.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00395.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00590.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00554.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00637.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00575.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00608.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00389.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00550.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00634.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00547.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00394.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00580.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00631.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00558.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00582.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00570.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00583.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00603.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00581.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00559.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00623.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00390.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00615.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00392.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00551.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00605.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00610.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00387.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00549.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00391.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00633.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00572.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00620.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00560.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00564.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00388.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00632.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00594.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00576.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00561.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00614.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00588.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00596.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00568.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00591.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00629.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00630.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00573.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00624.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00584.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00571.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00628.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00565.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00552.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00627.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00574.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00626.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00595.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00592.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00601.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00556.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00393.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00600.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00617.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00546.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00548.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00609.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00589.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00566.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00602.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00579.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00613.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00618.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00585.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00599.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00616.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00593.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00604.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00612.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00619.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00553.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00569.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00567.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00587.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00597.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00622.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00562.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00557.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00607.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00563.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00386.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00578.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00625.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00635.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00611.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00668.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00728.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00640.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00726.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00677.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00647.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00658.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00403.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00708.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00664.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00642.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00690.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00641.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00655.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00667.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00721.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00399.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00732.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00645.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00675.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00683.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00689.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00722.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00698.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00692.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00396.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00730.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00643.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00711.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00673.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00691.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00699.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00397.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00666.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00703.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00709.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00710.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00648.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00725.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00696.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00684.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00716.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00660.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00400.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00704.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00678.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00680.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00723.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00693.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00657.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00663.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00672.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00685.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00719.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00670.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00705.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00718.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00731.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00671.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00652.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00404.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00695.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00720.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00700.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00644.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00681.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00712.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00401.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00653.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00715.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00687.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00706.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00697.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00714.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00729.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00649.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00402.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00724.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00713.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00701.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00662.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00638.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00679.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00371.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00686.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00688.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00694.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00682.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00674.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00654.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00639.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00659.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00702.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00656.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00665.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00676.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00717.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00661.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00707.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00650.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00727.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00646.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00669.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00398.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00651.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00405.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00786.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00805.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00797.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00747.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00759.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00753.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00762.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00782.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00806.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00823.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00758.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00768.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00745.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00808.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00771.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00760.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00770.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00784.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00409.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00778.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00776.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00757.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00411.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00733.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00780.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00748.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00774.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00817.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00820.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00788.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00783.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00819.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00785.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00372.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00739.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00798.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00743.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00752.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00804.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00742.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00810.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00772.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00755.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00761.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00775.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00792.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00767.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00764.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00807.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00777.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00407.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00735.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00824.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00809.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00766.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00734.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00756.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00746.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00406.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00749.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00787.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00769.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00818.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00413.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00793.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00815.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00790.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00773.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00811.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00791.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00408.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00750.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00740.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00794.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00751.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00795.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00737.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00754.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00800.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00812.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00827.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00799.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00736.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00822.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00816.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00738.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00789.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00779.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00813.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00821.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00803.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00765.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00802.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00825.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00744.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00814.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00796.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00763.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00801.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00410.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00781.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00741.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00412.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00826.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00427.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00861.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00450.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00376.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00435.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00463.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00880.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00433.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00467.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00415.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00419.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00426.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00456.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00844.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00828.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00454.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00375.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00862.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00860.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00423.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00437.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00464.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00850.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00831.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00854.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00455.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00453.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00869.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00429.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00868.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00832.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00434.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00432.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00461.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00842.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00430.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00443.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00855.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00837.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00377.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00462.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00870.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00438.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00847.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00859.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00440.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00421.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00414.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00449.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00838.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00853.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00867.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00841.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00846.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00858.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00458.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00852.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00424.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00451.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00865.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00871.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00436.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00836.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00863.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00830.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00418.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00833.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00452.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00373.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00446.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00840.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00416.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00445.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00839.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00851.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00444.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00447.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00431.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00374.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00829.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00448.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00459.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00834.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00428.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00439.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00835.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00856.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00465.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00866.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00441.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00460.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00848.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00849.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00422.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00864.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00857.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00425.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00442.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00417.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00457.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00466.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00845.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00420.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00843.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00990.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001043.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00982.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001012.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001016.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001054.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001068.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00889.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001055.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001066.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001062.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001021.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001007.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001014.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001004.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001039.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001009.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001052.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001013.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001038.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001017.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001061.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001003.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001041.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001008.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001050.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00971.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001006.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001018.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00980.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001026.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00994.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001067.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001011.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001015.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00883.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001047.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001010.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001035.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00881.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001033.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00997.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00888.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00973.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001045.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00987.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001032.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001031.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00993.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001001.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00992.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001063.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00978.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001040.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00998.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00988.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00979.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00970.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00882.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00995.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001036.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001057.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001022.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001064.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001023.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00885.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001028.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00991.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00986.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001042.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001025.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00996.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001049.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001002.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001053.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001000.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00974.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001059.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001020.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001034.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001048.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001029.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00981.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00976.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001019.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001056.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001037.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00887.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00985.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001069.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001005.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001024.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00983.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00972.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001058.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00984.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00886.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00999.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00884.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001060.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00977.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001030.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001065.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00989.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00975.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001027.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001044.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001051.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001046.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001100.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001072.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001077.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001090.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001145.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001162.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001158.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001112.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001110.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001156.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001127.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001099.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001116.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001129.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001147.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001094.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001085.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001152.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001075.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001118.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001124.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001141.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001125.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001082.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001135.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00893.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001115.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001130.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00897.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001160.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001137.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00895.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001105.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001078.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001117.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001165.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001095.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001159.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00872.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00892.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001150.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001161.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001134.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001098.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001144.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001133.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001103.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001091.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00896.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001108.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001089.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001104.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001080.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001076.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00890.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001121.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001163.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001126.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001167.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001097.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001143.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001153.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001131.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001083.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001086.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001140.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001070.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001138.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001123.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001114.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001073.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00898.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001109.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001107.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001151.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00891.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00899.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001084.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001154.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001111.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001166.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001164.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001142.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001146.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001079.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001096.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001119.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001132.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001101.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001102.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001122.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001071.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001106.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00894.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001149.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001120.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001136.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001148.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001093.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001113.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001155.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001092.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001139.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001088.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001087.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001081.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001074.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001157.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001128.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00900.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00938.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00939.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001208.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00943.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001202.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00875.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00944.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001182.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00912.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00934.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001206.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00874.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00904.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001216.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001212.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00940.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00902.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001183.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00941.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001219.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00930.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00908.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00921.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00932.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001226.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001224.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001179.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001186.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00945.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00931.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00877.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00933.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001209.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00929.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00942.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00920.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00901.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00907.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00903.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00914.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001221.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001204.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00927.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001180.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001201.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001192.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001203.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00876.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00910.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001176.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001215.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00913.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001175.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00905.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001187.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001210.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00915.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001170.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001217.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001213.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001173.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001190.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001184.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001205.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001172.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00918.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001225.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001223.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001171.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001199.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00917.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001169.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001200.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001181.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001185.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00924.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001207.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001178.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001177.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001193.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00935.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00909.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001188.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00916.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001189.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001194.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00906.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001174.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001218.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00928.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001214.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00936.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001197.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001196.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00922.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00873.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001222.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00926.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001195.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001211.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00925.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001168.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001220.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001191.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00919.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001198.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00937.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00923.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00911.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00956.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00961.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00962.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00947.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00969.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00964.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00879.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00968.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00963.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00878.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00957.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00960.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00966.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00954.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00965.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00959.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00948.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00946.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00952.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00953.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00949.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00950.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00958.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00951.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00967.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00955.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/002.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/003.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/004.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/005.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/006.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/008.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/007.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/009.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0010.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0011.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0012.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0013.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0014.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0015.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0019.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0026.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0028.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0021.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0017.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0022.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0016.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0030.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0027.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0023.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0024.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0025.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0029.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0020.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0018.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0041.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0053.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0047.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0046.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0033.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0036.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0045.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0049.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0039.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0044.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0034.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0040.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0050.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0038.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0042.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0052.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0051.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0048.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0043.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0032.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0031.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0035.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0037.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00342.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00334.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00304.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00358.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00331.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00305.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00322.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00327.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00338.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00362.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00328.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00312.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00324.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00310.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00307.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00339.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00366.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00309.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00355.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00361.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00346.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00359.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00347.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00349.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00341.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00311.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00360.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00315.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00323.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00335.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00344.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00318.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00306.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00340.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00320.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00367.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00343.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00308.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0054.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00333.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00345.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00352.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00356.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00365.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00363.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00329.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00316.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00303.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00348.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00357.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00319.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00350.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00332.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00351.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00314.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00353.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00330.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0055.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00317.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00321.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00336.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00325.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00364.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00313.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00354.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00337.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00326.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001241.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001431.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001311.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001229.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001275.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001246.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001429.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001227.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001231.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001314.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001434.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001263.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001340.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001280.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001316.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001326.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001334.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001266.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001287.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001435.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001298.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001320.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001276.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001233.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001345.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001291.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001347.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001238.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001240.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001303.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001255.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001273.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001293.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001332.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001428.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001234.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001349.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001237.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001253.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001252.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001245.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001250.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001342.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001282.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001268.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001306.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001313.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001248.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001296.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001330.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001317.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001337.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001321.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001297.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001339.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001327.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001289.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001294.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001232.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001309.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001272.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001259.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001343.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001432.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001427.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001262.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001239.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001267.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001325.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001288.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001304.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001323.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001274.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001244.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001285.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001310.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001278.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001264.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001228.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001257.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001283.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001346.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001348.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001235.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001341.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001279.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001328.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001305.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001322.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001324.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001295.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001290.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001292.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001350.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001286.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001254.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001333.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001344.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001302.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001433.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001300.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001277.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001299.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001301.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001249.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001315.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001247.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001335.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001236.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001307.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001269.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001318.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001331.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001270.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001284.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001312.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001319.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001261.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001271.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001256.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001281.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001336.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001258.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001260.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001308.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001329.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001430.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001230.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001243.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001265.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001338.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001251.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001242.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001355.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001384.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001443.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001453.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001478.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001375.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001373.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001379.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001462.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001421.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001363.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001459.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001417.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001405.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001445.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001468.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001380.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001365.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001418.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001466.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001392.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001451.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001467.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001354.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001419.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001364.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001391.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001371.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001352.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001475.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001444.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001409.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001361.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001360.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001359.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001385.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001474.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001448.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001387.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001473.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001441.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001412.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001394.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001464.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001442.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001368.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001470.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001472.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001357.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001353.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001436.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001477.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001461.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001438.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001383.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001425.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001422.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001400.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001389.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001396.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001456.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001455.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001382.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001449.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001399.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001406.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001377.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001393.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001356.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001369.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001416.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001471.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001403.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001408.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001411.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001374.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001402.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001358.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001446.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001413.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001372.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001440.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001439.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001414.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001381.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001367.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001351.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001410.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001370.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001415.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001458.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001460.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001465.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001454.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001390.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001404.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001423.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001476.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001452.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001397.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001426.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001407.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001388.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001366.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001420.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001401.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001386.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001437.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001424.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001376.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001395.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001378.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001362.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001447.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001469.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001463.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001457.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001450.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001398.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001501.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001517.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001498.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001521.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001557.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001543.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0064.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001513.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001515.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001552.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001564.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001530.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001554.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001575.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001497.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0067.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001539.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001529.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001566.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0062.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001500.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001574.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0060.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001493.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001553.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001567.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001545.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001533.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001489.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001524.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001525.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0063.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001499.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001494.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001490.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001576.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001531.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001561.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0070.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001505.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001572.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001565.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001535.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0059.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001563.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001544.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001488.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001492.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0071.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001486.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001527.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001523.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001562.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001558.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001479.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001541.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001548.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001568.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0068.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001560.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001573.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0069.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001519.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0061.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001503.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001509.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001504.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001522.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001577.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001532.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001555.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001537.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0072.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001534.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001542.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001491.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001570.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0065.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001480.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001551.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001547.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0066.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001510.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001540.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001511.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001538.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001512.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001502.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001546.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001518.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001571.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001520.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001550.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001485.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001549.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001507.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001496.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001481.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001516.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001556.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001495.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001526.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001506.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001514.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0058.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001569.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001559.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001484.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001528.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001482.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001508.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001483.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001487.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/001536.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0089.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0094.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0091.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0093.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0080.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0074.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0075.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0087.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0090.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0086.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0084.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0083.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0088.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0081.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0082.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0056.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0092.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0085.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0096.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0073.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0079.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0057.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0076.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0095.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0077.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/0078.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00238.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00146.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00258.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00103.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00297.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00117.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00137.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00232.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00252.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00295.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00294.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00248.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00253.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00106.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00184.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00208.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00120.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00147.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00276.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00129.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00104.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00130.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00102.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00277.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00263.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00292.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00209.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00205.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00194.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00233.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00125.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00216.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00197.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00215.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00290.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00264.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00200.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00222.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00242.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00302.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00171.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00271.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00107.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00159.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00228.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00170.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00289.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00249.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00111.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00150.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00185.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00267.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00254.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00123.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00234.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00285.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00250.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00225.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00274.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00133.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00193.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00190.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00288.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00259.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00204.wav"
            string_val: "/content/drive/MyDrive/heartbeat artifact/00283.wav"
          }
        }
      }
    }
    node_def {
      name: "loader/TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "loader/normalize_element/component_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "is_files"
        value {
          b: false
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_STRING
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/buffer_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1577
          }
        }
      }
    }
    node_def {
      name: "loader/seed"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "loader/seed2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "loader/ShuffleDataset"
      op: "ShuffleDataset"
      input: "loader/TensorSliceDataset:handle:0"
      input: "loader/buffer_size:output:0"
      input: "loader/seed:output:0"
      input: "loader/seed2:output:0"
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_STRING
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/count"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "loader/RepeatDataset"
      op: "RepeatDataset"
      input: "loader/ShuffleDataset:handle:0"
      input: "loader/count:output:0"
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_STRING
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/num_parallel_calls"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4
          }
        }
      }
    }
    node_def {
      name: "loader/ParallelMapDatasetV2"
      op: "ParallelMapDatasetV2"
      input: "loader/RepeatDataset:handle:0"
      input: "loader/num_parallel_calls:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "deterministic"
        value {
          s: "default"
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_map__decode_audio_shaped_306"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: true
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/FlatMapDataset"
      op: "FlatMapDataset"
      input: "loader/ParallelMapDatasetV2:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_flat_map__slice_dataset_wrapper_396"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/buffer_size_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4096
          }
        }
      }
    }
    node_def {
      name: "loader/seed_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "loader/seed2_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "loader/ShuffleDataset_1"
      op: "ShuffleDataset"
      input: "loader/FlatMapDataset:handle:0"
      input: "loader/buffer_size_1:output:0"
      input: "loader/seed_1:output:0"
      input: "loader/seed2_1:output:0"
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 128
          }
        }
      }
    }
    node_def {
      name: "loader/drop_remainder"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "loader/BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "loader/ShuffleDataset_1:handle:0"
      input: "loader/batch_size:output:0"
      input: "loader/drop_remainder:output:0"
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "parallel_copy"
        value {
          b: false
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/buffer_size_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 512
          }
        }
      }
    }
    node_def {
      name: "loader/PrefetchDataset"
      op: "PrefetchDataset"
      input: "loader/BatchDatasetV2:handle:0"
      input: "loader/buffer_size_2:output:0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loader/BatchDatasetV2"
          }
        }
      }
      attr {
        key: "buffer_size_min"
        value {
          i: 0
        }
      }
      attr {
        key: "legacy_autotune"
        value {
          b: true
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "slack_period"
        value {
          i: 0
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/WrapDatasetVariant"
      op: "WrapDatasetVariant"
      input: "loader/PrefetchDataset:handle:0"
    }
    node_def {
      name: "loader/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/cpu:0"
          }
        }
      }
    }
    node_def {
      name: "loader/Const_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/cpu:0"
          }
        }
      }
    }
    node_def {
      name: "loader/GeneratorDataset"
      op: "GeneratorDataset"
      input: "loader/Const:output:0"
      input: "loader/WrapDatasetVariant:output_handle:0"
      input: "loader/Const_1:output:0"
      input: "loader/Const_2:output:0"
      attr {
        key: "Tfinalize_func_args"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tinit_func_args"
        value {
          list {
            type: DT_STRING
            type: DT_VARIANT
          }
        }
      }
      attr {
        key: "Tnext_func_args"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "finalize_func"
        value {
          func {
            name: "__inference__remote_finalize_func_446"
          }
        }
      }
      attr {
        key: "init_func"
        value {
          func {
            name: "__inference__remote_init_func_421"
          }
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "next_func"
        value {
          func {
            name: "__inference__remote_next_func_434"
            attr {
              key: "experimental_ints_on_device"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "loader/buffer_size_3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "loader/PrefetchDataset_1"
      op: "PrefetchDataset"
      input: "loader/GeneratorDataset:handle:0"
      input: "loader/buffer_size_3:output:0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loader/GeneratorDataset"
          }
        }
      }
      attr {
        key: "buffer_size_min"
        value {
          i: 0
        }
      }
      attr {
        key: "legacy_autotune"
        value {
          b: true
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 16384
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "slack_period"
        value {
          i: 0
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    ret {
      key: "loader_prefetchdataset_1"
      value: "loader/PrefetchDataset_1:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 1087
  min_consumer: 12
}
